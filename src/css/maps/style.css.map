{"version":3,"sources":["<no source>","style.css","abstracts/placeholders/_placeholders.scss","abstracts/variables/_variables.scss","base/_resets.scss","abstracts/mixins/_typography.scss","components/_nav.scss","abstracts/functions/_sizing-functions.scss","vendor/_include-media.scss","abstracts/functions/_color-functions.scss","_footer.scss","abstracts/mixins/_grid-claus-edition.scss","_cards.scss"],"names":[],"mappings":"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","file":"../style.css","sourcesContent":[null,"@charset \"UTF-8\";\n.footer form input[type=submit], .card__button {\n  display: inline-block;\n  text-align: center;\n  padding: .5rem 1rem;\n  color: white;\n  border-radius: 0.2rem;\n  cursor: pointer;\n  border: none;\n  letter-spacing: .1rem;\n  text-decoration: none;\n  outline: none;\n  font-weight: 300;\n}\n\n.hidden {\n  visibility: collapse;\n  position: absolute;\n  width: 0;\n  height: 0;\n  margin: 0;\n  padding: 0;\n}\n\nhtml {\n  line-height: 1.5;\n  scroll-behavior: smooth;\n  box-sizing: border-box;\n}\n\nhtml {\n  font-size: 14px;\n}\n\n@media screen and (min-width: 756px) {\n  html {\n    font-size: calc(14px + 6 * ((100vw - 756px) / 744));\n  }\n}\n\n@media screen and (min-width: 1500px) {\n  html {\n    font-size: 20px;\n  }\n}\n\n*,\n:before,\n:after {\n  box-sizing: inherit;\n}\n\nbody {\n  padding: 0;\n  margin: 0;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  -moz-font-smooth: antialiased;\n  font-family: \"Palanquin\", sans-serif;\n  color: #111;\n  text-rendering: optimizeLegibility;\n  font-smooth: auto;\n}\n\nh1 {\n  font-family: '\"Open sans\"', sans-serif;\n  font-weight: 300;\n  color: #f1f1f1;\n  margin: 0.67em 0 0.34em 0;\n}\n\nh2 {\n  font-family: '\"Open sans\"', sans-serif;\n  font-weight: 300;\n  color: #f1f1f1;\n  margin: 0.75em 0 0.38em 0;\n}\n\nh3 {\n  font-family: '\"Open sans\"', sans-serif;\n  font-weight: 300;\n  color: #f1f1f1;\n  margin: 0.83em 0 0.42em 0;\n}\n\nh4 {\n  font-family: '\"Open sans\"', sans-serif;\n  font-weight: 300;\n  color: #f1f1f1;\n  margin: 1.12em 0 0.57em 0;\n}\n\np {\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 300;\n  color: #333;\n}\n\nul {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\na {\n  color: inherit;\n  text-decoration: none;\n}\n\nfigure {\n  width: 100%;\n  height: auto;\n  padding: 0;\n  margin: 0;\n}\n\nfigure img {\n  width: 100%;\n  max-width: 100%;\n  height: auto;\n  object-fit: contain;\n}\n\np {\n  font-weight: 300;\n  color: #111;\n}\n\n.navbar li, .navbar__open-button {\n  background-color: #13C2C9;\n  border-radius: 100%;\n  width: 5rem;\n  height: 5rem;\n  position: fixed;\n  color: white;\n  text-align: center;\n  left: calc(100% - 7.5rem);\n  top: calc(50% - 2.5rem);\n  transform: translate3d(0, 0, 0);\n  transition: transform 150ms;\n  transition-timing-function: cubic-bezier(0.48, -0.6, 0.345, 1.295);\n  /* custom */\n}\n\n.main-nav {\n  margin: 0;\n  padding: 0;\n  position: fixed;\n  width: 100%;\n  bottom: 0;\n  height: 9rem;\n  z-index: 50;\n}\n\n.main-nav:before {\n  position: fixed;\n  content: '';\n  z-index: 0;\n  color: transparent;\n  top: 0;\n  right: 0;\n  opacity: 0;\n  transition: opacity 1s;\n}\n\n.main-nav.overlay:before {\n  position: fixed;\n  content: 'Svært at vælge?';\n  font-family: \"Frijole\", \"Palanquin\", sans-serif;\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 4.6875rem;\n  z-index: 0;\n  padding: 80vh 0 0 2.34375rem;\n  text-align: left;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: radial-gradient(circle at 80% top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.7) 50%);\n  opacity: 1;\n  transition: opacity 15s;\n}\n\n@media (max-width: 1024px) {\n  .main-nav.overlay:before {\n    background: radial-gradient(circle at 50% 90%, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.7) 50%);\n    padding: 5vh 0 0 0;\n    text-align: center;\n  }\n}\n\n@media (min-width: 1025px) {\n  .main-nav {\n    bottom: unset;\n  }\n}\n\n@keyframes rad-gradient-fade {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n.navbar {\n  font-family: \"Noto Color Emoji\", \"Palanquin\", sans-serif;\n  height: auto;\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 10px 0;\n  position: relative;\n  left: 50%;\n  transform: translateX(-50%);\n  filter: url(\"#shadowed-goo\");\n  box-sizing: border-box;\n  font-size: 1.25rem;\n  text-align: left;\n}\n\n.navbar li {\n  transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  word-break: break-all;\n  display: flex;\n}\n\n.navbar li a {\n  justify-self: center;\n  align-self: center;\n  width: 100%;\n  text-align: center;\n  font-size: 2.5rem;\n  text-decoration: none;\n}\n\n.navbar li span.burger-layer {\n  width: 1.5625rem;\n  height: 0.1875rem;\n  background: #E7E7E7;\n  display: block;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-left: -0.78125rem;\n  margin-top: -0.09375rem;\n  transition: transform 200ms;\n}\n\n.navbar li span.burger-layer:nth-child(1) {\n  transform: translate3d(0, -0.5rem, 0);\n}\n\n.navbar li span.burger-layer:nth-child(2) {\n  transform: translate3d(0, 0, 0);\n}\n\n.navbar li span.burger-layer:nth-child(3) {\n  transform: translate3d(0, 0.5rem, 0);\n}\n\n.navbar__open-button {\n  z-index: 100;\n  transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  /* custom */\n  transition-duration: 400ms;\n  cursor: pointer;\n  line-height: 100%;\n}\n\n.navbar__open-button span {\n  width: 1.5625rem;\n  height: 0.1875rem;\n  background: #E7E7E7;\n  display: block;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-left: -0.78125rem;\n  margin-top: -0.09375rem;\n  transition: transform 200ms;\n}\n\n.navbar__open-button span:nth-child(1) {\n  transform: translate3d(0, -0.5rem, 0);\n}\n\n.navbar__open-button span:nth-child(2) {\n  transform: translate3d(0, 0, 0);\n}\n\n.navbar__open-button span:nth-child(3) {\n  transform: translate3d(0, 0.5rem, 0);\n}\n\n.navbar__open-button .burger-shape {\n  background: #E7E7E7;\n  position: relative;\n  height: 3.125rem;\n  width: 3.125rem;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  clip-path: polygon(0 100%, 0 81%, 51% 75%, 51% 59%, 0 61%, 0 34%, 49% 37%, 49% 18%, 0 22%, 0 0, 100% 0, 100% 22%, 49% 18%, 49% 38%, 100% 46%, 100% 60%, 51% 59%, 51% 76%, 100% 74%, 100% 100%);\n  transition: clip-path 200ms;\n}\n\n.navbar--open li {\n  left: calc(50% - 2.5rem);\n}\n\n.navbar--open li:nth-child(1) {\n  /* left */\n  transition-duration: 570ms;\n  transform: translate3d(-10rem, 0.625rem, 0);\n}\n\n.navbar--open li:nth-child(2) {\n  /* left */\n  transition-duration: 490ms;\n  transform: translate3d(-5rem, 0rem, 0);\n}\n\n.navbar--open li:nth-child(4) {\n  /* right */\n  transition-duration: 490ms;\n  transform: translate3d(5rem, 0rem, 0);\n}\n\n.navbar--open li:nth-child(5) {\n  /* right */\n  transition-duration: 570ms;\n  transform: translate3d(10rem, 0.625rem, 0);\n}\n\n@media (min-width: 1025px) {\n  .navbar--open li {\n    left: calc(100% - 17.5rem);\n  }\n  .navbar--open li:nth-child(1) {\n    /* left */\n    transition-duration: 570ms;\n    transform: translate3d(-10rem, -0.625rem, 0);\n  }\n  .navbar--open li:nth-child(2) {\n    /* left */\n    transition-duration: 490ms;\n    transform: translate3d(-5rem, 0rem, 0);\n  }\n  .navbar--open li:nth-child(4) {\n    /* right */\n    transition-duration: 490ms;\n    transform: translate3d(5rem, 0rem, 0);\n  }\n  .navbar--open li:nth-child(5) {\n    /* right */\n    transition-duration: 570ms;\n    transform: translate3d(10rem, -0.625rem, 0);\n  }\n}\n\n.navbar--open .navbar__open-button {\n  /* custom */\n  transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);\n  transition-duration: 400ms;\n  transform: scale(0.85, 0.85) translate3d(0, 0, 0);\n  background: #8abff7;\n}\n\n.navbar--open .navbar__open-button span:nth-child(1) {\n  transform: translate3d(0, 0, 0) rotate(45deg);\n}\n\n.navbar--open .navbar__open-button span:nth-child(2) {\n  transform: translate3d(0, 0, 0) scale(0.1, 1);\n}\n\n.navbar--open .navbar__open-button span:nth-child(3) {\n  transform: translate3d(0, 0, 0) rotate(-45deg);\n}\n\n.navbar--open .navbar__open-button .burger-shape {\n  transition: clip-path 500ms;\n  clip-path: polygon(40% 100%, 23% 96%, 11% 85%, 3% 68%, 1% 50%, 5% 33%, 13% 19%, 24% 10%, 37% 4%, 55% 3%, 73% 7%, 90% 18%, 96% 34%, 100% 45%, 99% 60%, 95% 76%, 86% 87%, 75% 96%, 61% 100%, 100% 100%);\n}\n\n.footer {\n  display: grid;\n  grid-gap: 2.2rem;\n  grid-template-columns: 1fr;\n  padding: 2.2rem;\n  background: steelblue;\n}\n\n@media (min-width: 769px) {\n  .footer {\n    grid-template-columns: 1fr 1fr;\n  }\n}\n\n@media (min-width: 1025px) {\n  .footer {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n}\n\n.footer__nav ul,\n.footer__subnav ul {\n  display: flex;\n  flex-direction: column;\n}\n\n.footer__nav ul a,\n.footer__subnav ul a {\n  color: #111;\n  font-weight: 300;\n}\n\n.footer form {\n  display: flex;\n  flex-direction: column;\n}\n\n.footer form input[type=email],\n.footer form select {\n  width: 100%;\n  padding: .4rem .6rem;\n  border: .1rem solid #ccc;\n  border-radius: .1rem;\n  box-sizing: border-box;\n  margin-bottom: 1rem;\n}\n\n.footer form label {\n  padding: .2rem .4rem;\n  color: #333;\n  font-weight: 300;\n}\n\n.footer form input[type=submit] {\n  background-color: tomato;\n  margin: .5rem 0 0 0;\n  align-self: center;\n}\n\n.cards {\n  display: grid;\n  grid-template-columns: 1fr;\n  background: green;\n  grid-gap: 2rem;\n  padding: 2rem;\n}\n\n@media (min-width: 401px) {\n  .cards {\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    grid-gap: 2.2rem;\n    padding: 4.4rem;\n  }\n}\n\n.card {\n  display: flex;\n  flex-direction: column;\n  background: #eee;\n  border-radius: 0.2rem;\n}\n\n.card figure {\n  border-radius: 0.2rem 0.2rem 0 0;\n  display: block;\n  width: 100%;\n  height: auto;\n  position: relative;\n  padding: 66% 0 0 0;\n  /* 34.37% = 100 / (w / h) = 100 / (640 / 220) */\n}\n\n.card figure .off {\n  position: absolute;\n  top: 8%;\n  left: -.5rem;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  border-radius: 0 0.2rem 0.2rem 0;\n  font-size: 18px;\n  background: yellow;\n  color: black;\n  padding: .25rem 1rem;\n}\n\n.card figure img {\n  border-radius: 0.2rem 0.2rem 0 0;\n  display: block;\n  width: 100%;\n  max-height: 100%;\n  height: auto;\n  object-fit: cover;\n  object-position: center;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n\n.card__title {\n  text-align: center;\n  font-size: 25px;\n  margin: .6rem;\n  letter-spacing: .2rem;\n}\n\n.card__content {\n  padding: 0 2rem;\n  font-size: 16px;\n  flex-grow: 1;\n}\n\n.card hr {\n  width: calc(100% - ($smallspacing * 2));\n  margin: 0 2rem;\n  opacity: .17;\n}\n\n.card div {\n  display: flex;\n  justify-content: space-between;\n  background: steelblue;\n  padding: 1rem;\n  border-radius: 0.2rem;\n  transform: scale(1.02);\n}\n\n.card__price {\n  color: white;\n  font-weight: 300;\n  align-self: center;\n  font-size: 18px;\n}\n\n.card__price-discount {\n  padding: 0 .2rem;\n  font-size: 16px;\n  align-self: center;\n  text-decoration: line-through;\n  color: red;\n}\n\n.card__button {\n  background: firebrick;\n  font-size: 14px;\n  font-weight: 300;\n}\n","\n\n%button {\n    display: inline-block;\n    text-align: center;\n    // padding: calc(8px + 0.1vw) calc(16px + 0.5vw);\n    padding: .5rem 1rem;\n    color: white;\n    // border-radius: calc(3px + 0.1vw);\n    border-radius: $cards__border-radius;\n    cursor: pointer;\n    // border: 1px solid rgba(0,0,0,.3);\n    border: none;\n    letter-spacing: .1rem;\n    text-decoration: none;\n    outline: none;\n    font-weight: 300;\n    // box-shadow: 0px 2px 5px 2px rgba(0,0,0,.1);\n}\n\n%button-outline {\n    display: inline-block;\n    text-align: center;\n    // padding: 8px 16px;\n    padding: px2rem(8px) px2rem(16px);\n    // padding: calc(8px + 0.1vw) calc(16px + 0.5vw);\n    // border-radius: calc(3px + 0.1vw);\n    // border-radius: 3px;\n    border-radius: px2rem(3px);\n    cursor: pointer;\n    // border: 1px solid rgba(0,0,0,.4);\n    border: px2rem(1px) solid rgba(0,0,0,.4);\n    font-weight: 300;\n    // opacity: .6;\n    // border: none;\n    // letter-spacing: 1px;\n    text-decoration: none;\n}\n\n%hidden {\n    visibility: collapse;\n    position: absolute;\n    width: 0;\n    height: 0;\n    margin: 0;\n    padding: 0;\n}\n\n","// /**************************************************\n// Generel variables for framework\n// ***************************************************/\n\n// Getting fonts\n\n// Imports are now handled by font-magician\n// @import url('https://fonts.googleapis.com/css?family=Ubuntu:300,400,500,700');\n\n//\n// SCSS VARS_____________________\n//\n// Fonts and fallbacks\n// $main-font: 'Noto Color Emoji', sans-serif;\n// $main-font: 'Poor Story', 'Open Sans', 'Noto Color Emoji', 'Noto Sans', sans-serif;\n// $main-font: 'Open Sans', sans-serif;\n// $main-font: 'Crimson Text', sans-serif;\n// $main-font: 'Skranji', sans-serif;\n// $main-font: 'Arima Madurai', sans-serif;\n// $main-font: 'Bubblegum Sans', sans-serif;\n// $main-font: 'Englebert', sans-serif;\n// $main-font: 'Covered By Your Grace', sans-serif;\n$main-font: 'Palanquin', sans-serif;\n\n\n$kid-color-theme: (\n    '1': #2BA8FF,\n    '2': #0AE80C,\n    '3': #FFCD17,\n    '4': #E8290A,\n    '5': #7208FF\n);\n\n$kid-color-theme2: (\n    '1': #147EEE,\n    '2': #141414,\n    '3': #E7E7E7,\n    '4': #14EE7E,\n    '5': #EE1414\n);\n\n$kid-color-theme3: (\n    '1': #F76726,\n    '2': #3CA8FF,\n    '3': #FFED2B,\n    '4': #13C2C9,\n    '5': #FB3656\n);\n\n$kid-color-theme-menu: (\n\n);\n\n@function kidColor($key, $color-map: $kid-color-theme) {\n    @if not map-has-key($color-map, $key) {\n        @warn 'no color with that name found.';\n        @return deeppink;\n    } @else {\n        @return map-get($color-map, $key);\n    }\n}\n\n$text-heading: #000;\n$text-main: #111;\n$text-secoundary: #030391;\n\n//SET STYLES\n//Color theme\n$color__primary: #111;\n$color__secoundary: #333;\n$color__tertiary: #f1f1f1;\n\n//Font theme\n$font__primary: 'Roboto', sans-serif;\n$font__secoundary: '\"Open sans\"', sans-serif;\n\n\n//CHANGE STYLES\n\n//Headings/h1, h2, h3..\n//h1\n$heading__font: $font__secoundary;\n$heading__font-weight: 300;\n$heading__color: $color__tertiary;\n\n//h2\n$heading2__font: $font__secoundary;\n$heading2__font-weight: 300;\n$heading2__color: $color__tertiary;\n\n//h3\n$heading3__font: $font__secoundary;\n$heading3__font-weight: 300;\n$heading3__color: $color__tertiary;\n\n//h4\n$heading4__font: $font__secoundary;\n$heading4__font-weight: 300;\n$heading4__color: $color__tertiary;\n\n//paragraph/p\n$paragraph__font: $font__primary;\n$paragraph__font-weight: 300;\n$paragraph__color: $color__secoundary;\n\n//Padding & margins\n//Spacings\n$spacing: 2.2rem;\n$smallspacing: 2rem;\n\n//Paddings\n$padding__botton: 1rem 2rem;\n$padding__botton-sm: 0.5rem 1rem;\n$padding__botton-xs: 0.25rem 0.5rem;\n\n//Margins\n$smallmargin: 1rem;\n$margin: 2rem;\n\n//STYLING\n$cards__border-radius: .2rem;\n\n\n$breakpoints: (\n    'phone': 400px,\n    'tablet': 768px,\n    'desktop': 1024px\n);\n// ) !default;\n\n\n$menu-color: kidColor('4', $kid-color-theme3);\n\n// $menu-active-color: #fada77;\n$menu-active-color: tint(kidColor('1', $kid-color-theme2), 50%);\n\n// $burger-color: rgb(48, 77, 116);\n$burger-color: kidColor('3', $kid-color-theme2);\n\n$menu-items: 4;\n\n$menu-item-size: 80px;\n\n$menu-item-gap: 0;\n\n$burger-size: $menu-item-size / 2 + 10px;\n\n$pix-dir: 10px;\n\n$start-at-menu: true;\n\n\n\n","html {\n    $min-width: getBp('phone');\n    $max-width: getBp('desktop');\n    line-height: 1.5;\n    // $max-width: 1500px; \n    $min-width: 756px;\n    $max-width: 1200px;\n    // $max-width: 1500px;\n    $max-width: 1500px;\n    $min-font: 14px;\n    $max-font: 20px;\n    @include fluid-font($min-width, $max-width, $min-font, $max-font);\n    scroll-behavior: smooth;\n    box-sizing: border-box;\n}\n\n*,\n:before,\n:after {\n    box-sizing: inherit;\n}\n\nbody {\n    padding: 0;\n    margin: 0;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    -moz-font-smooth: antialiased;\n    font-family: $main-font;\n    color: $text-main;\n    // font-smoothing: antialiased;\n    text-rendering: optimizeLegibility;\n    font-smooth: auto;\n\n}\n\n// font-smooth: auto;\n\nh1 {\n    font-family: $heading__font;\n    font-weight: $heading__font-weight;\n    color: $heading__color;\n    margin: .67em 0 .34em 0 // margin: .67em 0 calc(0.67em / 2) 0\n}\n\nh2 {\n    font-family: $heading2__font;\n    font-weight: $heading2__font-weight;\n    color: $heading2__color;\n    margin: .75em 0 .38em 0 // margin: .75em 0 calc(0.75em / 2) 0\n}\n\nh3 {\n    font-family: $heading3__font;\n    font-weight: $heading3__font-weight;\n    color: $heading3__color;\n    margin: .83em 0 .42em 0 // margin: .83em 0 calc(0.83em / 2) 0\n}\n\nh4 {\n    font-family: $heading4__font;\n    font-weight: $heading4__font-weight;\n    color: $heading4__color;\n    margin: 1.12em 0 .57em 0 // margin: 1.12em 0 calc(1.12em / 2) 0\n}\n\n// h5 {\n//     font-family: $heading5__font;\n//     font-weight: $heading5__font-weight;\n//     color: $heading5__color;\n//     margin: 1.5em 0 .75em 0\n// }\n\n// h6 {\n//     font-family: $heading6__font;\n//     font-weight: $heading6__font-weight;\n//     color: $heading6__color;\n//     margin: 1.67em 0 .84em 0\n// }\n// h1, h2, h3, h4, h5, h6 {\n//     color: $text-heading;\n//     font-weight: 400;\n// }\n\np {\n    font-family: $paragraph__font;\n    font-weight: $paragraph__font-weight;\n    color: $paragraph__color;\n}\n\nul {\n    margin: 0;\n    padding: 0;\n    list-style: none\n}\n\na {\n    color: inherit;\n    text-decoration: none;\n}\n\nfigure {\n    width: 100%;\n    height: auto;\n    padding: 0;\n    margin: 0;\n\n    img {\n        width: 100%;\n        max-width: 100%;\n        height: auto;\n        object-fit: contain;\n    }\n}\n\np {\n    font-weight: 300;\n    color: $text-main;\n}\n\n.hidden {\n    @extend %hidden !optional;\n}","@function strip-unit($number) {\r\n    @if type-of($number)== 'number' and not unitless($number) {\r\n        @return $number / ($number * 0 + 1);\r\n    }\r\n\r\n    @return $number;\r\n}\r\n\r\n@mixin fluid-font($min-vw, $max-vw, $min-font-size, $max-font-size) {\r\n    $u1: unit($min-vw);\r\n    $u2: unit($max-vw);\r\n    $u3: unit($min-font-size);\r\n    $u4: unit($max-font-size);\r\n\r\n    @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {\r\n        &   {\r\n            font-size: $min-font-size;\r\n            @media screen and (min-width: $min-vw) {\r\n                font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));\r\n            }\r\n            @media screen and (min-width: $max-vw) {\r\n                font-size: $max-font-size;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {\r\n  @each $property in $properties {\r\n    #{$property}: $min-value;\r\n  }\r\n\r\n  @media (min-width: $min-vw) {\r\n    @each $property in $properties {\r\n      #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});\r\n    }\r\n  }\r\n\r\n  @media (min-width: $max-vw) {\r\n    @each $property in $properties {\r\n      #{$property}: $max-value;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\r\n\t& {\r\n\t\t@each $property in $properties {\r\n\t\t\t#{$property}: $min-value;\r\n\t\t}\r\n\r\n\t\t@media screen and (min-width: $min-screen) {\r\n\t\t\t@each $property in $properties {\r\n\t\t\t\t#{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value); \r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t@media screen and (min-width: $max-screen) {\r\n\t\t\t@each $property in $properties {\r\n\t\t\t\t#{$property}: $max-value;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Requires the calc-interpolation function which can also be used independently\r\n\r\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\r\n\t$a: ($max-value - $min-value) / ($max-screen - $min-screen);\r\n\t$b: $min-value - $a * $min-screen; \r\n\r\n\t$sign: \"+\";\r\n\t@if ($b < 0) {\r\n\t\t$sign: \"-\";\r\n\t\t$b: abs($b);\r\n\t}\r\n\t@return calc(#{$a*100}vw #{$sign} #{$b});\r\n}","// $menu-color: #bada55;\n$menu-color: kidColor('4', $kid-color-theme3) !default;\n\n// $menu-active-color: #fada77;\n$menu-active-color: tint(kidColor('1', $kid-color-theme2), 50%) !default;\n\n// $burger-color: rgb(48, 77, 116);\n$burger-color: kidColor('3', $kid-color-theme2) !default;\n\n$menu-items: 4 !default;\n\n$menu-item-size: 80px !default;\n\n$menu-item-gap: 0 !default;\n\n$burger-size: $menu-item-size / 2 + 10px !default; \n\n$pix-dir: 10px !default;\n\n$start-at-menu: true !default;\n\n%ball {\n    background-color: $menu-color;\n    border-radius: 100%;\n    // width: px2rem(80px);\n    // height: px2rem(80px);\n    // z-index: 0;\n    width: px2rem($menu-item-size);\n    height: px2rem($menu-item-size);\n    position: fixed;\n    color: white;\n    text-align: center;\n    // left: calc(50% - #{px2rem($menu-item-size / 2)});\n    left: calc(100% - #{px2rem($menu-item-size * 1.5)});\n    top: calc(50% - #{px2rem($menu-item-size / 2)});\n    transform: translate3d(0, 0, 0);\n    transition: transform 150ms;\n    transition-timing-function: cubic-bezier(0.480, -0.600, 0.345, 1.295);\n    // transition-delay: 1s;\n    /* custom */\n}\n\n\n.main-nav {\n    // margin: 50px 0;\n    margin: 0;\n    padding: 0;\n    // width: 100%;\n    position: fixed;\n    width: 100%;\n    bottom: 0;\n    height: px2rem($menu-item-size * 1.8);\n    z-index: 50;\n    \n    // &:not(.overlay):before {\n    &:before {\n        position: fixed;\n        content: '';\n        z-index: 0;\n        // width: 100%;\n        // height: 100%;\n        color: transparent;\n        top: 0;\n        // bottom: 0;\n        // left: 0;\n        right: 0;\n        // background: radial-gradient(transparent, rgba(0,0,0,0.5));\n        // background: radial-gradient(circle at 75% top, #333, #333 50%, #eee 75%, #333 75%);\n        // background: transparent;\n        opacity: 0;\n        transition: opacity 1s;\n        // animation-duration: 500ms;\n        // filter: none;\n        // animation: rad-gradient-fade 300ms ease 1 backwards;\n    }\n\n    &.overlay {\n        &:before {\n            position: fixed;\n            content: 'Svært at vælge?';\n            // font-family: 'Fredericka the Great', sans-serif;\n            // font-family: 'Cabin Sketch', $main-font;\n            // font-family: 'Press Start 2P', $main-font;\n            font-family: 'Frijole', $main-font;\n            // font-family: 'Hanalei', sans-serif;\n            // font-family: 'Freckle Face', sans-serif;\n            // font-family: 'Irish Grover', sans-serif;\n            color: rgba(255, 255, 255, 0.5);\n            font-size: px2rem(75);\n            z-index: 0;\n            padding: 80vh 0 0 px2rem(75/2);\n            text-align: left;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n            background: radial-gradient(circle at 80% top, rgba(0,0,0,0), rgba(0,0,0,0.7) 50%);\n            opacity: 1;\n            transition: opacity 15s;\n            @include media('<=desktop') {\n                background: radial-gradient(circle at 50% 90%, rgba(0,0,0,0), rgba(0,0,0,0.7) 50%);\n                padding: 5vh 0 0 0;\n                text-align: center;\n            }\n        }\n    }\n    // $min-width: $tablet-width;\n    // $max-width: $desktop-width;\n    // $min-font: 12px;\n    // $max-font: 20px;\n    // @include fluid-font($min-width, $max-width, $min-font, $max-font);\n\n    @include media('>desktop') {\n        bottom: unset;\n    }\n}\n\n@keyframes rad-gradient-fade {\n    from {\n        // background: radial-gradient(circle at 75% top, rgba(0,0,0,0), rgba(0,0,0,0.0) 50%);\n        opacity: 0;\n    }\n    to {\n        // background: radial-gradient(circle at 75% top, rgba(0,0,0,0), rgba(0,0,0,0.7) 50%);\n        opacity: 1;\n    }\n}\n\n.navbar {\n    font-family: 'Noto Color Emoji', $main-font;\n    height: auto;\n    display: inline-block;\n    // width: px2rem(($menu-item-size * ($menu-items + 1) - 10px));\n    width: 100%;\n    // width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 10px 0;\n    position: relative;\n    // left: calc(50% - #{px2rem(($menu-item-size * $menu-items + 1) / 2)});\n    left: 50%;\n    transform: translateX(-50%);\n    // left: 100%;\n    // transform: translateX(-100%);\n    // filter: url('#shadowed-goo');\n    filter: url('#shadowed-goo');\n    box-sizing: border-box;\n    font-size: px2rem(20px);\n    text-align: left;\n\n    \n\n\n    li {\n        @extend %ball;\n        transition-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1.275);\n        // transition-timing-function: cubic-bezier(0.480, -0.600, 0.515, 1.580); /* custom */\n        word-break: break-all;\n        display: flex;\n\n        a {\n            // line-height: 100%;\n            justify-self: center;\n            align-self: center;\n            width: 100%;\n            // height: 100%;\n            text-align: center;\n            font-size: px2rem($menu-item-size / 2);\n            // font-size: 100%;\n            text-decoration: none;\n        }\n\n        span.burger-layer {\n            $width: 25px;\n            $height: 3px;\n            width: px2rem($width);\n            height: px2rem($height);\n            background: $burger-color;\n            display: block;\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            margin-left: px2rem(-$width/2);\n            margin-top: px2rem(-$height/2);\n            transition: transform 200ms;\n\n            &:nth-child(1) {\n                transform: translate3d(0, px2rem(-8px), 0);\n            }\n\n            &:nth-child(2) {\n                transform: translate3d(0, 0, 0);\n            }\n\n            &:nth-child(3) {\n                transform: translate3d(0, px2rem(8px), 0);\n            }\n        }\n\n        // .burger-shape {\n\n        //     background: $burger-color;\n        //     position: relative;\n        //     height: px2rem($burger-size);\n        //     width: px2rem($burger-size);\n        //     top: 50%;\n        //     left: 50%;\n        //     transform: translate(-50%, -50%);\n        //     clip-path: polygon(0 100%, 0 81%, 51% 75%, 51% 59%, 0 61%, 0 34%, 49% 37%, 49% 18%, 0 22%, 0 0, 100% 0, 100% 22%, 49% 18%, 49% 38%, 100% 46%, 100% 60%, 51% 59%, 51% 76%, 100% 74%, 100% 100%);\n        //     transition: clip-path 200ms;\n        // }\n\n        // @for $i from 1 through $menu-items {\n        //     @if not $i == ($menu-items / 2 + 1) {\n        //         &:nth-child(#{$i}) {\n        //             transition-duration: 200ms;\n        //         }\n        //     }\n        // }\n        @for $i from 1 through $menu-items {\n            @if not $i == ($menu-items / 2 + 1) {\n                &:nth-child(#{$i}) {\n                    transition-duration: 200ms;\n                }\n            }\n        }\n    }\n\n    // .navbar__open-button {\n    &__open-button {\n        @extend %ball;\n        // transition-timing-function:cubic-bezier(0.175, 0.885, 0.320, 1.275);\n        z-index: 100;\n        // transition-timing-function: cubic-bezier(0.480, -0.600, 0.515, 1.580);\n        transition-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1.275);\n        /* custom */\n        transition-duration: 400ms;\n        // transform:scale(1.1,1.1) translate3d(0,0,0);\n        cursor: pointer;\n        line-height: 100%;\n        \n    \n        span {\n            $width: 25px;\n            $height: 3px;\n            width: px2rem($width);\n            height: px2rem($height);\n            background: $burger-color;\n            display: block;\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            margin-left: px2rem(-$width/2);\n            margin-top: px2rem(-$height/2);\n            transition: transform 200ms;\n    \n            &:nth-child(1) {\n                transform: translate3d(0, px2rem(-8px), 0);\n            }\n    \n            &:nth-child(2) {\n                transform: translate3d(0, 0, 0);\n            }\n    \n            &:nth-child(3) {\n                transform: translate3d(0, px2rem(8px), 0);\n            }\n        }\n    \n        .burger-shape {\n    \n            background: $burger-color;\n            position: relative;\n            height: px2rem($burger-size);\n            width: px2rem($burger-size);\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            clip-path: polygon(0 100%, 0 81%, 51% 75%, 51% 59%, 0 61%, 0 34%, 49% 37%, 49% 18%, 0 22%, 0 0, 100% 0, 100% 22%, 49% 18%, 49% 38%, 100% 46%, 100% 60%, 51% 59%, 51% 76%, 100% 74%, 100% 100%);\n            transition: clip-path 200ms;\n        }\n    }\n}\n\n\n// $real-menu-items: $menu-items + 1;\n.navbar--open {\n    // left: 50%;\n    // transform: translateX(-50%);\n\n    li {\n        // transition-timing-function: cubic-bezier(0.480, -0.600, 0.345, 1.295);\n        // transition-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1.275);\n        left: calc(50% - #{px2rem($menu-item-size / 2)});\n        // transition: left 1s;\n        \n        // transition-property: left;\n        // transition-delay: 1s;\n\n\n        @for $i from 1 through $menu-items+1 {\n            @if $i <= ($menu-items / 2) {\n                &:nth-child(#{$i}) {\n                    /* left */\n\n                    transition-duration: 250ms + (80ms * abs(($i + 0) - ($menu-items + 1)));\n\n                    // transform: translate3d(px2rem($menu-item-size * (($i - 1 + $menu-items / 2) - $menu-items)), px2rem(-((10px * (($i - 1 + $menu-items / 2) - $menu-items) + 10px))), 0);\n                    @if $start-at-menu {\n                        transform: translate3d(px2rem(($menu-item-size + $menu-item-gap) * (($i - 1 + $menu-items / 2) - $menu-items)),\n                            px2rem(-(($pix-dir * (($i - 1 + $menu-items / 2) - $menu-items) + $pix-dir))), 0);\n                    }\n\n                    @else {\n                        transform: translate3d(px2rem(($menu-item-size + $menu-item-gap) * (($i - 1 + $menu-items / 2) - $menu-items)),\n                            px2rem(-(($pix-dir * (($i - 1 + $menu-items / 2) - $menu-items)))), 0);\n                    }\n                }\n            }\n\n            @else {\n                @if $i > ($menu-items / 2 + 1) {\n                    &:nth-child(#{$i}) {\n                        /* right */\n                        transition-duration: 250ms + (80ms * ($i - 1));\n\n                        // transform: translate3d(px2rem($menu-item-size * ($i - ($menu-items / 2 + 1))), px2rem((10px * ($i - ($menu-items / 2 + 1))) - 10px), 0);\n                        @if $start-at-menu {\n                            transform: translate3d(px2rem(($menu-item-size + $menu-item-gap) * ($i - ($menu-items / 2 + 1))),\n                                px2rem(($pix-dir * ($i - ($menu-items / 2 + 1))) - $pix-dir), 0);\n                        }\n\n                        @else {\n                            transform: translate3d(px2rem(($menu-item-size + $menu-item-gap) * ($i - ($menu-items / 2 + 1))),\n                                px2rem(($pix-dir * ($i - ($menu-items / 2 + 1)))), 0);\n                        }\n                    }\n                }\n            }\n        }\n\n        @include media('>desktop') {\n\n            & {\n                // left: calc(100% - #{px2rem(($menu-item-size * $menu-items) - ($menu-item-size * 1.5))});\n                left: calc(100% - #{px2rem(($menu-item-size * $menu-items - ($menu-item-size / 2)))});\n            }\n\n            $pix-dir: -$pix-dir;\n\n            @for $i from 1 through $menu-items + 1 {\n                @if $i <= ($menu-items / 2) {\n                    &:nth-child(#{$i}) {\n                        /* left */\n\n                        transition-duration: 250ms + (80ms * abs(($i + 0) - ($menu-items + 1)));\n\n                        // transform: translate3d(px2rem($menu-item-size * (($i - 1 + $menu-items / 2) - $menu-items)), px2rem(-((10px * (($i - 1 + $menu-items / 2) - $menu-items) + 10px))), 0);\n                        @if $start-at-menu {\n                            transform: translate3d(px2rem(($menu-item-size + $menu-item-gap) * (($i - 1 + $menu-items / 2) - $menu-items)),\n                                px2rem(-(($pix-dir * (($i - 1 + $menu-items / 2) - $menu-items) + $pix-dir))), 0);\n                        }\n\n                        @else {\n                            transform: translate3d(px2rem(($menu-item-size + $menu-item-gap) * (($i - 1 + $menu-items / 2) - $menu-items)),\n                                px2rem(-(($pix-dir * (($i - 1 + $menu-items / 2) - $menu-items)))), 0);\n                        }\n                    }\n                }\n\n                @else {\n                    @if $i > ($menu-items / 2 + 1) {\n                        &:nth-child(#{$i}) {\n                            /* right */\n                            transition-duration: 250ms + (80ms * ($i - 1));\n\n                            // transform: translate3d(px2rem($menu-item-size * ($i - ($menu-items / 2 + 1))), px2rem((10px * ($i - ($menu-items / 2 + 1))) - 10px), 0);\n                            @if $start-at-menu {\n                                transform: translate3d(px2rem(($menu-item-size + $menu-item-gap) * ($i - ($menu-items / 2 + 1))),\n                                    px2rem(($pix-dir * ($i - ($menu-items / 2 + 1))) - $pix-dir), 0);\n                            }\n\n                            @else {\n                                transform: translate3d(px2rem(($menu-item-size + $menu-item-gap) * ($i - ($menu-items / 2 + 1))),\n                                    px2rem(($pix-dir * ($i - ($menu-items / 2 + 1)))), 0);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // .logo {\n    .navbar__open-button {\n        // transition-timing-function: cubic-bezier(0.480, -0.600, 0.515, 1.580);\n        /* custom */\n        // transition-timing-function: cubic-bezier(0.480, -0.600, 0.515, 1.580); /* custom */\n        // transition-timing-function: cubic-bezier(0.1, -0.1, 0.345, 1.295);\n        transition-timing-function: cubic-bezier(0.165, 0.840, 0.440, 1.000);\n\n\n\n        transition-duration: 400ms;\n        // transform:scale(0.8,0.8) translate3d(0,0,0);\n        // transform:scale(0.85,0.85) translate3d(0, px2rem(-10px),0);\n        transform: scale(0.85, 0.85) translate3d(0, 0, 0);\n        background: $menu-active-color;\n\n        // &:hover {\n        //   color: red;\n        // }\n        span {\n            &:nth-child(1) {\n                transform: translate3d(0, 0, 0) rotate(45deg);\n            }\n\n            &:nth-child(2) {\n                transform: translate3d(0, 0, 0) scale(0.1, 1);\n            }\n\n            &:nth-child(3) {\n                transform: translate3d(0, 0, 0) rotate(-45deg);\n            }\n        }\n\n        .burger-shape {\n            transition: clip-path 500ms;\n            // clip-path: polygon(0 100%, 0 83%, 0 72%, 0 70%, 0 55%, 0 44%, 0 35%, 0 22%, 0 15%, 0 0, 100% 0, 100% 15%, 100% 21%, 100% 33%, 100% 46%, 100% 56%, 100% 61%, 100% 69%, 100% 80%, 100% 100%);\n            // clip-path: polygon(\n            //     0 100%, \n            //     0 83%, \n            //     0 72%,\n            //     0 70%, \n            //     0 55%, \n            //     0 44%, \n            //     0 35%, \n            //     0 22%, \n            //     0 15%, \n            //     0 0, \n            //     100% 0, \n            //     100% 15%, \n            //     100% 21%, \n            //     100% 33%, \n            //     100% 46%, \n            //     100% 56%, \n            //     100% 61%, \n            //     100% 69%, \n            //     100% 80%, \n            //     100% 100%);\n            clip-path: polygon(40% 100%,\n                23% 96%,\n                11% 85%,\n                3% 68%,\n                1% 50%,\n                5% 33%,\n                13% 19%,\n                24% 10%,\n                37% 4%,\n                55% 3%,\n                73% 7%,\n                90% 18%,\n                96% 34%,\n                100% 45%,\n                99% 60%,\n                95% 76%,\n                86% 87%,\n                75% 96%,\n                61% 100%,\n                100% 100%);\n        }\n    }\n}","@function strip-unit($number) {\r\n    @if type-of($number) == 'number' and not unitless($number) {\r\n        @return $number / ($number * 0 + 1);\r\n    }\r\n    @return $number;\r\n}\r\n\r\n@function px2rem($px, $root-px: 16) {\r\n    $value: strip-unit($px);\r\n    $root-value: strip-unit($root-px);\r\n    @return $value / $root-value + rem;\r\n}\r\n\r\n@function converter($val, $mp-val: 1, $mp: 1, $unit: null) {\r\n    $value: strip-unit($val);\r\n    $divider: strip-unit($mp-val);\r\n    @if $unit == null {\r\n        $unit: '';\r\n    }\r\n\r\n    @if $divider == 0 {\r\n        $divider: 1\r\n    }\r\n\r\n    @if $divider < 0 {\r\n        @return unquote($value / $divider + $unit);\r\n    } @else {\r\n        @return unquote($value * $divider + $unit);\r\n    }\r\n}\r\n\r\n@function to-unit($val, $unit: null) {\r\n    // @if type-of($unit) not 'string' and {\r\n    @if $unit and unitless($val) and type-of($val) == 'number' {\r\n        // @return strip-unit($val) + #{$unit};\r\n        @return unquote(strip-unit($val) + $unit);\r\n    }\r\n    \r\n    @return $val;\r\n}\r\n\r\n@mixin square-element($size) {\r\n    @if ($size == null) or (type-of($size) != number) {\r\n        @warn 'should be a number';\r\n    } \r\n    max-width: $size; \r\n    min-height: $size;\r\n}\r\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px,\n) !default;\n\n@function getBp($bp) {\n  @if not map-has-key($map: $breakpoints, $key: $bp) {\n    @warn 'Breakpoint not found. Breakpoints available: #{map-keys($map: $breakpoints)}.';\n    @return $bp;\n  }\n  @return map-get($map: $breakpoints, $key: #{$bp});\n}\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n","/// Slightly lighten a color, \r\n/// inverted for Ubuntu design compatibility.\r\n/// @access public\r\n/// @param {Color} $color - color to tint\r\n/// @param {Number} $percentage - percentage of `$color` in returned color\r\n/// @return {Color} - \r\n@function tint($color, $percentage) {\r\n    @return mix($color, white, $percentage);\r\n    // @return mix(white, $color, $percentage);\r\n}\r\n\r\n/// Slightly darken a color\r\n/// @access public\r\n/// @param {Color} $color - color to shade\r\n/// @param {Number} $percentage - percentage of `$color` in returned color\r\n/// @return {Color} -\r\n@function shade($color, $percentage) {\r\n    @return mix(black, $color, $percentage);\r\n}\r\n\r\n/// Slightly lighten a color\r\n/// @access public\r\n/// @param {Color} $color - color to tint\r\n/// @param {Number} $percentage - percentage of `$color` in returned color\r\n/// @return {Color} -\r\n@function org-tint($color, $percentage) {\r\n    @return mix(white, $color, $percentage);\r\n}\r\n",".footer {\n    @include grid3;\n    padding: $spacing;\n    background: steelblue;\n\n    &__nav ul,\n    &__subnav ul {\n        display: flex;\n        flex-direction: column;\n\n        & a {\n            color: $color__primary;\n            font-weight: 300;\n        }\n    }\n\n    form {\n        display: flex;\n        flex-direction: column;\n\n        input[type=email],\n        select {\n            width: 100%;\n            padding: .4rem .6rem;\n            border: .1rem solid #ccc;\n            border-radius: .1rem;\n            box-sizing: border-box;\n            margin-bottom: 1rem;\n        }\n\n        label {\n            padding: .2rem .4rem;\n            color: $color__secoundary;\n            font-weight: 300;\n        }\n\n        input[type=submit] {\n            @extend %button;\n            background-color: tomato;\n            margin: .5rem 0 0 0;\n            // width: 80%;\n            align-self: center;\n            // margin: 16px 0 0 0;\n        }\n    }\n}","\n// @mixin grid3($gap){\n//     display: grid;\n//     gap: $gap;\n//     grid-template-columns: 1fr;\n//     @include media('>phone'){\n//         grid-template-columns: repeat(3, 1fr);\n//     }\n// }\n@mixin grid3{\n    display: grid;\n    grid-gap: $spacing;\n    grid-template-columns: 1fr;\n    @include media('>tablet'){\n        grid-template-columns: 1fr 1fr;\n    }\n    @include media('>desktop'){\n        grid-template-columns: 1fr 1fr 1fr;\n    }\n}\n\n@mixin grid4($gap){\n    display: grid;\n    gap: $gap;\n    grid-template-columns: repeat(4, 1fr);\n    @include mq-phone{\n        grid-template-columns: 1fr;\n    }\n    @include mq-tablet{\n        grid-template-columns: 1fr 1fr;\n    }\n}\n\n@mixin grid12($gap){\n    display: grid;\n    gap: $gap;\n    grid-template-columns: repeat(12, 1fr);\n}\n\n@mixin makeGrid($col, $gap) {\n    @if $col==3 {\n        @include grid3($gap);\n    }\n    @if $col==4 {\n        @include grid4($gap);\n    }\n    @if $col==12 {\n        @include grid12($gap);\n    }\n    @else {\n        @warn 'invalid number of grid, you fucking n00b!';\n    }\n}\n\n$grid-gap: 16px !default;\n\n@mixin mkGrid($col, $gap: $grid-gap) {\n    display: grid;\n    grid-template-columns: repeat(#{$col}, 1fr);\n    \n    @if not $gap == false {\n        gap: $gap;\n    }\n\n\n    @include mq-phone{\n        grid-template-columns: 1fr;\n    }\n    @include mq-tablet{\n        grid-template-columns: 1fr 1fr;\n    }\n}\n\n",".cards {\n    display: grid;\n    grid-template-columns: 1fr;\n    background: green;\n    grid-gap: $smallspacing;\n    padding: $smallspacing;\n\n    @include media('>phone') {\n        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n        grid-gap: $spacing;\n        padding: $spacing * 2;\n    }\n}\n\n.card {\n    display: flex;\n    flex-direction: column;\n    background: #eee;\n\n\n    \n    border-radius: $cards__border-radius;\n    // box-shadow: 0 5px 15px -3px rgba(44, 44, 44, 0.234);\n    // padding: 1rem;\n\n    figure {\n        border-radius: $cards__border-radius $cards__border-radius 0 0;\n        display: block;\n        width: 100%;\n        height: auto;\n\n\n\n\n        position: relative;\n        // overflow: hidden;\n        padding: 66% 0 0 0;\n\n        /* 34.37% = 100 / (w / h) = 100 / (640 / 220) */\n        .off {\n            position: absolute;\n            top: 8%;\n            left: -.5rem;\n            border: 1px solid rgba(0, 0, 0, .3);\n            border-radius: 0 $cards__border-radius $cards__border-radius 0;\n            // font-size: 1rem;\n            font-size: 18px;\n            background: yellow;\n            color: black;\n            padding: .25rem 1rem;\n        }\n\n        img {\n            border-radius: $cards__border-radius $cards__border-radius 0 0;\n            display: block;\n            width: 100%;\n            max-height: 100%;\n            height: auto;\n            object-fit: cover;\n            object-position: center;\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n        }\n    }\n\n    &__title {\n        text-align: center;\n        // font-size: 1.8rem;\n        font-size: 25px;\n        margin: .6rem;\n        letter-spacing: .2rem;\n    }\n\n    &__content {\n        padding: 0 $smallspacing;\n        // font-size: 1rem;\n        font-size: 16px;\n        flex-grow: 1;\n    }\n\n    hr {\n        width: calc(100% - ($smallspacing * 2));\n        margin: 0 $smallspacing;\n        opacity: .17;\n    }\n\n    div {\n        display: flex;\n        justify-content: space-between;\n        background: steelblue;\n        padding: 1rem;\n        // border-radius: 0 0 $cards__border-radius $cards__border-radius;\n        border-radius: $cards__border-radius;\n        transform: scale(1.02);\n    }\n\n    &__price {\n        color: white;\n        font-weight: 300;\n        align-self: center;\n        // font-size: 1.2rem;\n        font-size: 18px;\n\n        &-discount {\n            padding: 0 .2rem;\n            // font-size: 1rem;\n            font-size: 16px;\n            align-self: center;\n            text-decoration: line-through;\n            color: red;\n        }\n    }\n\n\n    &__button {\n        @extend %button;\n        background: firebrick;\n        // font-size: .8rem;\n        font-size: 14px;\n        font-weight: 300;\n    }\n}"]}