{"version":3,"sources":["<no source>","vendor/_normalize8-not-sass.scss","style.css","abstracts/variables/_variables.scss","abstracts/placeholders/_placeholders.scss","abstracts/mixins/_grid.scss","base/_resets.scss","abstracts/mixins/_typography.scss","_nav.scss","_footer.scss","abstracts/mixins/_grid-claus-edition.scss","vendor/_include-media.scss"],"names":[],"mappings":"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","file":"../style.css","sourcesContent":[null,"// /*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */\r\n// /* Document\r\n//    ========================================================================== */\r\n// /**\r\n//  * 1. Correct the line height in all browsers.\r\n//  * 2. Prevent adjustments of font size after orientation changes in iOS.\r\n//  */\r\n//  html {\r\n//     line-height: 1.15; /* 1 */\r\n//     -webkit-text-size-adjust: 100%; /* 2 */\r\n//   }\r\n//   /* Sections\r\n//      ========================================================================== */\r\n//   /**\r\n//    * Remove the margin in all browsers.\r\n//    */\r\n//   body {\r\n//     margin: 0;\r\n//   }\r\n//   /**\r\n//    * Correct the font size and margin on `h1` elements within `section` and\r\n//    * `article` contexts in Chrome, Firefox, and Safari.\r\n//    */\r\n//   h1 {\r\n//     font-size: 2em;\r\n//     margin: 0.67em 0;\r\n//   }\r\n//   /* Grouping content\r\n//      ========================================================================== */\r\n//   /**\r\n//    * 1. Add the correct box sizing in Firefox.\r\n//    * 2. Show the overflow in Edge and IE.\r\n//    */\r\n//   hr {\r\n//     box-sizing: content-box; /* 1 */\r\n//     height: 0; /* 1 */\r\n//     overflow: visible; /* 2 */\r\n//   }\r\n//   /**\r\n//    * 1. Correct the inheritance and scaling of font size in all browsers.\r\n//    * 2. Correct the odd `em` font sizing in all browsers.\r\n//    */\r\n//   pre {\r\n//     font-family: monospace, monospace; /* 1 */\r\n//     font-size: 1em; /* 2 */\r\n//   }\r\n//   /* Text-level semantics\r\n//      ========================================================================== */\r\n//   /**\r\n//    * Remove the gray background on active links in IE 10.\r\n//    */\r\n//   a {\r\n//     background-color: transparent;\r\n//   }\r\n//   /**\r\n//    * 1. Remove the bottom border in Chrome 57-\r\n//    * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\r\n//    */\r\n//   abbr[title] {\r\n//     border-bottom: none; /* 1 */\r\n//     text-decoration: underline; /* 2 */\r\n//     text-decoration: underline dotted; /* 2 */\r\n//   }\r\n//   /**\r\n//    * Add the correct font weight in Chrome, Edge, and Safari.\r\n//    */\r\n//   b,\r\n//   strong {\r\n//     font-weight: bolder;\r\n//   }\r\n//   /**\r\n//    * 1. Correct the inheritance and scaling of font size in all browsers.\r\n//    * 2. Correct the odd `em` font sizing in all browsers.\r\n//    */\r\n//   code,\r\n//   kbd,\r\n//   samp {\r\n//     font-family: monospace, monospace; /* 1 */\r\n//     font-size: 1em; /* 2 */\r\n//   }\r\n//   /**\r\n//    * Add the correct font size in all browsers.\r\n//    */\r\n//   small {\r\n//     font-size: 80%;\r\n//   }\r\n//   /**\r\n//    * Prevent `sub` and `sup` elements from affecting the line height in\r\n//    * all browsers.\r\n//    */\r\n//   sub,\r\n//   sup {\r\n//     font-size: 75%;\r\n//     line-height: 0;\r\n//     position: relative;\r\n//     vertical-align: baseline;\r\n//   }\r\n//   sub {\r\n//     bottom: -0.25em;\r\n//   }\r\n//   sup {\r\n//     top: -0.5em;\r\n//   }\r\n//   /* Embedded content\r\n//      ========================================================================== */\r\n//   /**\r\n//    * Remove the border on images inside links in IE 10.\r\n//    */\r\n//   img {\r\n//     border-style: none;\r\n//   }\r\n//   /* Forms\r\n//      ========================================================================== */\r\n//   /**\r\n//    * 1. Change the font styles in all browsers.\r\n//    * 2. Remove the margin in Firefox and Safari.\r\n//    */\r\n//   button,\r\n//   input,\r\n//   optgroup,\r\n//   select,\r\n//   textarea {\r\n//     font-family: inherit; /* 1 */\r\n//     font-size: 100%; /* 1 */\r\n//     line-height: 1.15; /* 1 */\r\n//     margin: 0; /* 2 */\r\n//   }\r\n//   /**\r\n//    * Show the overflow in IE.\r\n//    * 1. Show the overflow in Edge.\r\n//    */\r\n//   button,\r\n//   input { /* 1 */\r\n//     overflow: visible;\r\n//   }\r\n//   /**\r\n//    * Remove the inheritance of text transform in Edge, Firefox, and IE.\r\n//    * 1. Remove the inheritance of text transform in Firefox.\r\n//    */\r\n//   button,\r\n//   select { /* 1 */\r\n//     text-transform: none;\r\n//   }\r\n//   /**\r\n//    * Correct the inability to style clickable types in iOS and Safari.\r\n//    */\r\n//   button,\r\n//   [type=\"button\"],\r\n//   [type=\"reset\"],\r\n//   [type=\"submit\"] {\r\n//     -webkit-appearance: button;\r\n//   }\r\n//   /**\r\n//    * Remove the inner border and padding in Firefox.\r\n//    */\r\n//   button::-moz-focus-inner,\r\n//   [type=\"button\"]::-moz-focus-inner,\r\n//   [type=\"reset\"]::-moz-focus-inner,\r\n//   [type=\"submit\"]::-moz-focus-inner {\r\n//     border-style: none;\r\n//     padding: 0;\r\n//   }\r\n//   /**\r\n//    * Restore the focus styles unset by the previous rule.\r\n//    */\r\n//   button:-moz-focusring,\r\n//   [type=\"button\"]:-moz-focusring,\r\n//   [type=\"reset\"]:-moz-focusring,\r\n//   [type=\"submit\"]:-moz-focusring {\r\n//     outline: 1px dotted ButtonText;\r\n//   }\r\n//   /**\r\n//    * Correct the padding in Firefox.\r\n//    */\r\n//   fieldset {\r\n//     padding: 0.35em 0.75em 0.625em;\r\n//   }\r\n//   /**\r\n//    * 1. Correct the text wrapping in Edge and IE.\r\n//    * 2. Correct the color inheritance from `fieldset` elements in IE.\r\n//    * 3. Remove the padding so developers are not caught out when they zero out\r\n//    *    `fieldset` elements in all browsers.\r\n//    */\r\n//   legend {\r\n//     box-sizing: border-box; /* 1 */\r\n//     color: inherit; /* 2 */\r\n//     display: table; /* 1 */\r\n//     max-width: 100%; /* 1 */\r\n//     padding: 0; /* 3 */\r\n//     white-space: normal; /* 1 */\r\n//   }\r\n//   /**\r\n//    * Add the correct vertical alignment in Chrome, Firefox, and Opera.\r\n//    */\r\n//   progress {\r\n//     vertical-align: baseline;\r\n//   }\r\n//   /**\r\n//    * Remove the default vertical scrollbar in IE 10+.\r\n//    */\r\n//   textarea {\r\n//     overflow: auto;\r\n//   }\r\n//   /**\r\n//    * 1. Add the correct box sizing in IE 10.\r\n//    * 2. Remove the padding in IE 10.\r\n//    */\r\n//   [type=\"checkbox\"],\r\n//   [type=\"radio\"] {\r\n//     box-sizing: border-box; /* 1 */\r\n//     padding: 0; /* 2 */\r\n//   }\r\n//   /**\r\n//    * Correct the cursor style of increment and decrement buttons in Chrome.\r\n//    */\r\n//   [type=\"number\"]::-webkit-inner-spin-button,\r\n//   [type=\"number\"]::-webkit-outer-spin-button {\r\n//     height: auto;\r\n//   }\r\n//   /**\r\n//    * 1. Correct the odd appearance in Chrome and Safari.\r\n//    * 2. Correct the outline style in Safari.\r\n//    */\r\n//   [type=\"search\"] {\r\n//     -webkit-appearance: textfield; /* 1 */\r\n//     outline-offset: -2px; /* 2 */\r\n//   }\r\n//   /**\r\n//    * Remove the inner padding in Chrome and Safari on macOS.\r\n//    */\r\n//   [type=\"search\"]::-webkit-search-decoration {\r\n//     -webkit-appearance: none;\r\n//   }\r\n//   /**\r\n//    * 1. Correct the inability to style clickable types in iOS and Safari.\r\n//    * 2. Change font properties to `inherit` in Safari.\r\n//    */\r\n//   ::-webkit-file-upload-button {\r\n//     -webkit-appearance: button; /* 1 */\r\n//     font: inherit; /* 2 */\r\n//   }\r\n//   /* Interactive\r\n//      ========================================================================== */\r\n//   /*\r\n//    * Add the correct display in Edge, IE 10+, and Firefox.\r\n//    */\r\n//   details {\r\n//     display: block;\r\n//   }\r\n//   /*\r\n//    * Add the correct display in all browsers.\r\n//    */\r\n//   summary {\r\n//     display: list-item;\r\n//   }\r\n//   /* Misc\r\n//      ========================================================================== */\r\n//   /**\r\n//    * Add the correct display in IE 10+.\r\n//    */\r\n//   template {\r\n//     display: none;\r\n//   }\r\n//   /**\r\n//    * Add the correct display in IE 10.\r\n//    */\r\n//   [hidden] {\r\n//     display: none;\r\n//   }\r\nhtml {\r\n  line-height: 1.15;\r\n  -webkit-text-size-adjust: 100%\r\n}\r\n\r\nbody {\r\n  margin: 0\r\n}\r\n\r\nh1 {\r\n  font-size: 2em;\r\n  margin: .67em 0\r\n}\r\n\r\nhr {\r\n  box-sizing: content-box;\r\n  height: 0;\r\n  overflow: visible\r\n}\r\n\r\npre {\r\n  font-family: monospace, monospace;\r\n  font-size: 1em\r\n}\r\n\r\na {\r\n  background-color: transparent\r\n}\r\n\r\nabbr[title] {\r\n  border-bottom: none;\r\n  text-decoration: underline;\r\n  text-decoration: underline dotted\r\n}\r\n\r\nb,\r\nstrong {\r\n  font-weight: bolder\r\n}\r\n\r\ncode,\r\nkbd,\r\nsamp {\r\n  font-family: monospace, monospace;\r\n  font-size: 1em\r\n}\r\n\r\nsmall {\r\n  font-size: 80%\r\n}\r\n\r\nsub,\r\nsup {\r\n  font-size: 75%;\r\n  line-height: 0;\r\n  position: relative;\r\n  vertical-align: baseline\r\n}\r\n\r\nsub {\r\n  bottom: -.25em\r\n}\r\n\r\nsup {\r\n  top: -.5em\r\n}\r\n\r\nimg {\r\n  border-style: none\r\n}\r\n\r\nbutton,\r\ninput,\r\noptgroup,\r\nselect,\r\ntextarea {\r\n  font-family: inherit;\r\n  font-size: 100%;\r\n  line-height: 1.15;\r\n  margin: 0\r\n}\r\n\r\nbutton,\r\ninput {\r\n  overflow: visible\r\n}\r\n\r\nbutton,\r\nselect {\r\n  text-transform: none\r\n}\r\n\r\n[type=button],\r\n[type=reset],\r\n[type=submit],\r\nbutton {\r\n  -webkit-appearance: button\r\n}\r\n\r\n[type=button]::-moz-focus-inner,\r\n[type=reset]::-moz-focus-inner,\r\n[type=submit]::-moz-focus-inner,\r\nbutton::-moz-focus-inner {\r\n  border-style: none;\r\n  padding: 0\r\n}\r\n\r\n[type=button]:-moz-focusring,\r\n[type=reset]:-moz-focusring,\r\n[type=submit]:-moz-focusring,\r\nbutton:-moz-focusring {\r\n  outline: 1px dotted ButtonText\r\n}\r\n\r\nfieldset {\r\n  padding: .35em .75em .625em\r\n}\r\n\r\nlegend {\r\n  box-sizing: border-box;\r\n  color: inherit;\r\n  display: table;\r\n  max-width: 100%;\r\n  padding: 0;\r\n  white-space: normal\r\n}\r\n\r\nprogress {\r\n  vertical-align: baseline\r\n}\r\n\r\ntextarea {\r\n  overflow: auto\r\n}\r\n\r\n[type=checkbox],\r\n[type=radio] {\r\n  box-sizing: border-box;\r\n  padding: 0\r\n}\r\n\r\n[type=number]::-webkit-inner-spin-button,\r\n[type=number]::-webkit-outer-spin-button {\r\n  height: auto\r\n}\r\n\r\n[type=search] {\r\n  -webkit-appearance: textfield;\r\n  outline-offset: -2px\r\n}\r\n\r\n[type=search]::-webkit-search-decoration {\r\n  -webkit-appearance: none\r\n}\r\n\r\n::-webkit-file-upload-button {\r\n  -webkit-appearance: button;\r\n  font: inherit\r\n}\r\n\r\ndetails {\r\n  display: block\r\n}\r\n\r\nsummary {\r\n  display: list-item\r\n}\r\n\r\ntemplate {\r\n  display: none\r\n}\r\n\r\n[hidden] {\r\n  display: none\r\n}","html {\n  line-height: 1.15;\n  -webkit-text-size-adjust: 100%;\n}\n\nbody {\n  margin: 0;\n}\n\nh1 {\n  font-size: 2em;\n  margin: .67em 0;\n}\n\nhr {\n  box-sizing: content-box;\n  height: 0;\n  overflow: visible;\n}\n\npre {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\n\na {\n  background-color: transparent;\n}\n\nabbr[title] {\n  border-bottom: none;\n  text-decoration: underline;\n  text-decoration: underline dotted;\n}\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\n\nsmall {\n  font-size: 80%;\n}\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -.25em;\n}\n\nsup {\n  top: -.5em;\n}\n\nimg {\n  border-style: none;\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n  font-size: 100%;\n  line-height: 1.15;\n  margin: 0;\n}\n\nbutton,\ninput {\n  overflow: visible;\n}\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n[type=button],\n[type=reset],\n[type=submit],\nbutton {\n  -webkit-appearance: button;\n}\n\n[type=button]::-moz-focus-inner,\n[type=reset]::-moz-focus-inner,\n[type=submit]::-moz-focus-inner,\nbutton::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n[type=button]:-moz-focusring,\n[type=reset]:-moz-focusring,\n[type=submit]:-moz-focusring,\nbutton:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\nfieldset {\n  padding: .35em .75em .625em;\n}\n\nlegend {\n  box-sizing: border-box;\n  color: inherit;\n  display: table;\n  max-width: 100%;\n  padding: 0;\n  white-space: normal;\n}\n\nprogress {\n  vertical-align: baseline;\n}\n\ntextarea {\n  overflow: auto;\n}\n\n[type=checkbox],\n[type=radio] {\n  box-sizing: border-box;\n  padding: 0;\n}\n\n[type=number]::-webkit-inner-spin-button,\n[type=number]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n[type=search] {\n  -webkit-appearance: textfield;\n  outline-offset: -2px;\n}\n\n[type=search]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  font: inherit;\n}\n\ndetails {\n  display: block;\n}\n\nsummary {\n  display: list-item;\n}\n\ntemplate {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}\n\n/*\r\nRoot vars. STANDARD FONTS AND COLORS \r\n*/\n.row {\n  display: grid;\n  grid-template-columns: minmax(3vw, 1fr) minmax(auto, 1200px) minmax(3vw, 1fr);\n  width: 100%;\n}\n\nhtml {\n  line-height: 1.5;\n  box-sizing: border-box;\n  scroll-behavior: smooth;\n  user-zoom: fixed;\n}\n\nhtml {\n  font-size: 14px;\n}\n\n@media screen and (min-width: 600px) {\n  html {\n    font-size: calc(14px + 5 * ((100vw - 600px) / 424));\n  }\n}\n\n@media screen and (min-width: 1024px) {\n  html {\n    font-size: 19px;\n  }\n}\n\n*,\n:before,\n:after {\n  box-sizing: inherit;\n}\n\nul {\n  margin: 0;\n  list-style: none;\n}\n\nbody {\n  padding: 0;\n  margin: 0;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: \"Roboto\", sans-serif;\n  color: #111;\n  text-rendering: optimizeLegibility;\n  /* Prevent native touch events on Windows */\n  -moz-text-size-adjust: none;\n  -moz-user-select: none;\n  -ms-text-size-adjust: none;\n  -ms-touch-action: none;\n  -ms-user-select: none;\n  -o-text-size-adjust: none;\n  -webkit-text-size-adjust: none;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  text-size-adjust: none;\n  /* Prevent text resize on orientation change, useful for web-apps */\n  user-select: none;\n  /* Prevent the callout on tap-hold and text selection */\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-family: \"Roboto\", sans-serif;\n}\n\na:not(:hover) {\n  color: #111;\n  text-decoration: none;\n}\n\na:hover {\n  color: #111;\n}\n\ncode {\n  font-family: monospace;\n}\n\nfigure {\n  width: 100%;\n  height: auto;\n  padding: 0;\n  margin: 0;\n}\n\nfigure img {\n  width: 100%;\n  height: auto;\n  padding: 0;\n  margin: 0;\n  object-fit: contain;\n  object-position: center;\n}\n\np {\n  font-weight: 300;\n  color: #111;\n}\n\n.nav {\n  background: Red;\n  padding-bottom: 20px;\n  clip-path: url(#navClip);\n}\n\n.footer {\n  display: grid;\n  grid-gap: 2.2rem;\n  grid-template-columns: 1fr;\n  justify-content: center;\n  padding: 2.2rem;\n  background: steelblue;\n}\n\n@media (min-width: 769px) {\n  .footer {\n    grid-template-columns: 1fr 1fr;\n  }\n}\n\n@media (min-width: 1025px) {\n  .footer {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n}\n\n.footer__nav ul {\n  display: flex;\n  flex-direction: column;\n}\n\n.footer__nav ul li {\n  padding: 0.5rem 1rem;\n  background: red;\n  display: inline-block;\n}\n","// /**************************************************\r\n// Generel variables for framework\r\n// ***************************************************/\r\n\r\n// Getting fonts\r\n\r\n// Imports are now handled by font-magician\r\n// @import url('https://fonts.googleapis.com/css?family=Ubuntu:300,400,500,700');\r\n\r\n//\r\n// SCSS VARS_____________________\r\n//\r\n// Fonts and fallbacks\r\n// $main-font: 'Open Sans', sans-serif;\r\n$main-font: 'Roboto', sans-serif;\r\n\r\n// Core Colors.\r\n// tc = Theme Color;\r\n$tc-ubuntu-orange: #E95420;\r\n$tc-white: #FFF;\r\n$tc-black: #000;\r\n\r\n// Supporting colors\r\n$tc-light-aubergine: #77216F;\r\n$tc-mid-aubergine: #5E2750;\r\n$tc-dark-aubergine: #2C001E;\r\n\r\n// Neutral colors\r\n$tc-warm-grey: #AEA79F;\r\n$tc-cool-grey: #333;\r\n$tc-txt-grey: #111;\r\n\r\n$color-theme: (\r\n    prim1: $tc-ubuntu-orange,\r\n    prim2: $tc-white,\r\n    prim3: $tc-black,\r\n    sec1: $tc-light-aubergine,\r\n    sec2: $tc-mid-aubergine,\r\n    sec3: $tc-dark-aubergine,\r\n    tri1: $tc-warm-grey,\r\n    tri2: $tc-cool-grey,\r\n    tri3: $tc-txt-grey\r\n);\r\n\r\n//PADDING & MARGINS\r\n\r\n$spacing: 2.2rem;\r\n$smallspacing: 1rem;\r\n\r\n\r\n$padding__botton: 1rem 2rem;\r\n$padding__botton-small: 0.5rem 1rem;\r\n\r\n$smargin: 1rem;\r\n$margin: 2rem;\r\n\r\n\r\n\r\n//navigation\r\n// $nav-height: px2rem(100px);\r\n$nav-height: px2rem(100px);\r\n\r\n\r\n@function get-color($key) {\r\n    @if not map-has-key($color-theme, $key) {\r\n        @warn 'no color with that name found.';\r\n        @return deeppink;\r\n    } @else {\r\n        @return map-get($color-theme, $key);\r\n    }\r\n}\r\n\r\n// Widths for mediaqueries\r\n$tablet-width: 600px;   // below is phone. \r\n// between is tablet.\r\n$desktop-width: 1024px; // above is desktop \r\n\r\n$retina-width: 2100px;  // above is retina\r\n\r\n$mq-buffer: 1px; // buffer between mq's\r\n\r\n$breakpoints: (\r\n    'phone': 350px,\r\n    'tablet': 768px,\r\n    'desktop': 1024px\r\n);\r\n// ) !default;\r\n\r\n$gridcontainer-exists: true;\r\n\r\n$debug: false;\r\n\r\n/*\r\nRoot vars. STANDARD FONTS AND COLORS \r\n*/\r\n// :root {\r\n//     // /* FONTS AND FALLBACKS */\r\n    \r\n    \r\n//     // /* Calculation */\r\n//     // --respaonsive: calc((var(--min-font) * 1px) + (var(--max-font) - var(--min-font)) * ((100vw - 100px) / (1200 - 100))); /* Ranges from 421px to 1199px */\r\n// }\r\n","%button {\r\n    display: inline-block;\r\n    text-align: center;\r\n    // padding: calc(8px + 0.1vw) calc(16px + 0.5vw);\r\n    padding: px2rem(8px) px2rem(16px);\r\n    color: white !important;\r\n    // border-radius: calc(3px + 0.1vw);\r\n    border-radius: px2rem(3px);\r\n    cursor: pointer;\r\n    // border: 1px solid rgba(0,0,0,.3);\r\n    border: none;\r\n    letter-spacing: px2rem(1);\r\n    text-decoration: none;\r\n    outline: none;\r\n    font-weight: 300;\r\n    // box-shadow: 0px 2px 5px 2px rgba(0,0,0,.1);\r\n}\r\n\r\n%button-outline {\r\n    display: inline-block;\r\n    text-align: center;\r\n    // padding: 8px 16px;\r\n    padding: px2rem(8px) px2rem(16px);\r\n    // padding: calc(8px + 0.1vw) calc(16px + 0.5vw);\r\n    // border-radius: calc(3px + 0.1vw);\r\n    // border-radius: 3px;\r\n    border-radius: px2rem(3px);\r\n    cursor: pointer;\r\n    // border: 1px solid rgba(0,0,0,.4);\r\n    border: px2rem(1px) solid rgba(0,0,0,.4);\r\n    font-weight: 300;\r\n    // opacity: .6;\r\n    // border: none;\r\n    // letter-spacing: 1px;\r\n    text-decoration: none;\r\n}\r\n\r\n%row {\r\n    @include is-grid-container('minmax(3vw, 1fr) minmax(auto, 1200px) minmax(3vw, 1fr)');\r\n    width: 100%;\r\n}","// /**************************************************\r\n// Grid mixins \r\n// v.1.7\r\n// ***************************************************/\r\n// SCSS CSS Grid \r\n\r\n\r\n////\r\n/// This is a poster comment.\r\n/// It will apply annotations to all items from file.\r\n/// @author Michael Koch\r\n/// @group Grid\r\n////\r\n\r\n\r\n/// Default variable to write/read check if root\r\n/// grid container exist.\r\n/// Feel very free to override in other files.\r\n/// @author Michael Koch\r\n$gridcontainer-exists: false !default;\r\n\r\n\r\n/// Mixin to define a grid container\r\n/// @author Michael Koch\r\n/// @param {Column specs} $col-spec - Number of columns and spec\r\n/// @param {Row specs} $row-spec [null] - Number of rows and spec. For no row parse null.\r\n@mixin is-grid-container($col-spec, $row-spec: null) {\r\n    \r\n    display: grid;\r\n    @if $row-spec==null {\r\n        grid-template-columns: unquote(inspect($col-spec));\r\n    }@else {\r\n        grid-template-columns: unquote(inspect($col-spec));\r\n        grid-template-rows: unquote(inspect($row-spec));\r\n    }\r\n    \r\n    // Check if a root grid container exist\r\n    @if $gridcontainer-exists == false {\r\n        // Set up box model for root grid container\r\n        box-sizing: border-box;\r\n\r\n        // Make all child elements inherit the box model\r\n        & *,\r\n        *::before,\r\n        *::after {\r\n            box-sizing: border-box;\r\n        }\r\n        $gridcontainer-exists: true !global;\r\n    }\r\n    @content;\r\n}\r\n\r\n/// Shorthand mixin to define a grid container\r\n/// @author Michael Koch\r\n/// @param {Column specs} $col-spec - Number of columns and spec\r\n/// @param {Row specs} $row-spec [null] - Number of rows and spec. For no row parse null.\r\n/// @alias is-grid-container\r\n@mixin igc($col-spec, $row-spec: null) {\r\n    @include is-grid-container($col-spec, $row-spec);\r\n    @content;\r\n}\r\n\r\n/// Mixin to make a grid container class\r\n/// @author Michael Koch\r\n/// @param {string} $selector - Selector to make. e.g class, ID, type etc.\r\n/// @param {Column specs} $col-spec - Number of columns and spec\r\n/// @param {Row specs} $row-spec [null] - Number of rows and spec. For no row parse null.\r\n@mixin make-grid-container($selector, $col-spec, $row-spec: null) {\r\n    @if type-of($selector) !=string {\r\n        @warn '1st parameter should be a selector name (e.g: .container), and therefore a string.';\r\n    }\r\n\r\n    #{$selector} {\r\n        @include is-grid-container($col-spec, $row-spec) {\r\n            @content;\r\n        }\r\n    }\r\n}\r\n\r\n/// Shorthand mixin to make a grid container class\r\n/// @author Michael Koch\r\n/// @param {string} $selector - Selector to make. e.g class, ID, type etc.\r\n/// @param {Column specs} $col-spec - Number of columns and spec\r\n/// @param {Row specs} $row-spec [null] - Number of rows and spec. For no row parse null.\r\n/// @alias make-grid-container\r\n@mixin mgc($selector, $col-spec, $row-spec: null) {\r\n    @include make-grid-container($selector, $col-spec, $row-spec) {\r\n        @content;\r\n    }\r\n}\r\n\r\n/// Mixin to define a grid item\r\n/// @author Michael Koch\r\n/// @param {Column span} $col-span - Row placement in outer grid\r\n/// @param {Row span} $row-span [null] - Column placement in outer grid. For no row parse null.\r\n@mixin is-grid-item($col-span, $row-span: null) {\r\n    @if $row-span==null {\r\n        grid-column: unquote(inspect($col-span));\r\n    } @else {\r\n        grid-column: unquote(inspect($col-span));\r\n        grid-row: unquote(inspect($row-span));\r\n    }\r\n    @content;\r\n}\r\n\r\n/// Shorthand mixin to define a grid item\r\n/// @author Michael Koch\r\n/// @param {Column span} $col-span - Row placement in outer grid\r\n/// @param {Row span} $row-span [null] - Column placement in outer grid. For no row parse null.\r\n/// @alias is-grid-item\r\n@mixin igi($col-span, $row-span: null) {\r\n    @include is-grid-item($col-span, $row-span);\r\n    @content;\r\n}\r\n\r\n/// Mixin to make a grid item\r\n/// @author Michael Koch\r\n/// @param {string} $selector - Selector to make. e.g class, ID, type etc.\r\n/// @param {Column span} $col-span - Row placement in outer grid\r\n/// @param {Row span} $row-span [null] - Column placement in outer grid. For no row parse null.\r\n@mixin make-grid-itam($selector, $col-span, $row-span: null) {\r\n    @if type-of($selector) !=string {\r\n        @warn '1st parameter should be a selector name (e.g: .container), and therefore a string.';\r\n    }\r\n\r\n    #{$selector} {\r\n        @include is-grid-item($col-span, $row-span) {\r\n            @content;\r\n        }\r\n    }\r\n}\r\n\r\n/// Shorthand mixin to make a grid item\r\n/// @author Michael Koch\r\n/// @param {Column span} $col-span - Row placement in outer grid\r\n/// @param {Row span} $row-span [null] - Column placement in outer grid. For no row parse null.\r\n/// @alias make-grid-itam\r\n@mixin mgi($selector, $col-span, $row-span: null) {\r\n    @include make-grid-itam($selector, $col-span, $row-span) {\r\n        @content;\r\n    }\r\n}\r\n\r\n/// Mixin to define a sub grid container\r\n/// @author Michael Koch\r\n/// @param {Column span} $col-span - Column placement in outer grid\r\n/// @param {Row span} $row-span - Row placement in outer grid\r\n/// @param {Column specs} $row-spec - Number of column and spec in inner grid.\r\n/// @param {Row specs} $row-spec [null] - Number of rows and spec in inner grid. For no row parse null.\r\n@mixin is-sub-grid-container($col-span, $row-span, $col-spec, $row-spec: null) {\r\n    @include is-grid-container($col-spec, $row-spec);\r\n    @include is-grid-item($col-span, $row-span);\r\n    @content;\r\n}\r\n\r\n/// Shorthand mixin to define a sub grid container\r\n/// @author Michael Koch\r\n/// @param {Column span} $col-span - Column placement in outer grid\r\n/// @param {Row span} $row-span - Row placement in outer grid\r\n/// @param {Column specs} $row-spec - Number of column and spec in inner grid.\r\n/// @param {Row specs} $row-spec [null] - Number of rows and spec in inner grid. For no row parse null.\r\n/// @alias is-sub-grid-container\r\n@mixin isgc($col-span, $row-span, $col-spec, $row-spec: null) {\r\n    @include is-sub-grid-container($col-span, $row-span, $col-spec, $row-spec);\r\n    @content;\r\n}\r\n\r\n/// Mixin to make a sub grid container class\r\n/// @author Michael Koch\r\n/// @param {string} $selector - Selector to make. e.g class, ID, type etc.\r\n/// @param {Column span} $col-span - Column placement in outer grid\r\n/// @param {Row span} $row-span - Row placement in outer grid\r\n/// @param {Column specs} $row-spec - Number of column and spec in inner grid.\r\n/// @param {Row specs} $row-spec [null] - Number of rows and spec in inner grid. For no row parse null.\r\n@mixin make-sub-grid-container($selector, $col-span, $row-span, $col-spec, $row-spec: null) {\r\n    @include make-grid-itam($selector, $col-span, $row-span) {\r\n        @include is-grid-container($col-spec, $row-spec) {\r\n            @content;\r\n        }\r\n    }\r\n}\r\n\r\n/// Shorthand mixin to make a sub grid container class\r\n/// @author Michael Koch\r\n/// @param {string} $selector - Selector to make. e.g class, ID, type etc.\r\n/// @param {Column span} $col-span - Column placement in outer grid\r\n/// @param {Row span} $row-span - Row placement in outer grid\r\n/// @param {Column specs} $row-spec - Number of column and spec in inner grid.\r\n/// @param {Row specs} $row-spec [null] - Number of rows and spec in inner grid. For no row parse null.\r\n/// @alias make-sub-grid-container\r\n@mixin msgc($selector, $col-span, $row-span, $col-spec, $row-spec: null) {\r\n    @include make-sub-grid-container($selector, $col-span, $row-span, $col-spec, $row-spec) {\r\n        @content;\r\n    }\r\n}\r\n\r\n$grid-index: (  \r\n    2tm: 899, \r\n    2tl: 1, \r\n    dropdown: 210,\r\n    navigation: 205,\r\n    main-header: 200,\r\n    gridcontainer: 90,\r\n    teaser: 60,\r\n    info-text: 50, \r\n    bg-image: 40, \r\n    test3: 'span 4', \r\n    test: '1 / 13', \r\n    test1: '1 / 55', \r\n    test2: '1 / 14'\r\n) !default;\r\n\r\n@function get-grid($key) {\r\n    // @return unquote(map-get($grid-index, $key));\r\n    @if not map-has-key($grid-index, $key) {\r\n        // @warn \"Key `#{$key}` not found. Keys are: '#{map-keys($map: $z-index)}\"; // My compiler doesn't care for warnings, throw error.\r\n        @error 'Key `#{$key}` not found. Keys are: '#{map-keys($map: $grid-index)}'';\r\n    }\r\n    @return unquote(inspect(map-get($grid-index, $key)));\r\n}\r\n\r\n@mixin get-grid($key) {\r\n    grid-column: get-grid($key);\r\n}\r\n","$debug: false !default;\r\n\r\n// Check for dead links during development\r\n@mixin debug($debug: $debug) {\r\n    @if $debug {\r\n        @content;\r\n    }\r\n}\r\n\r\n@include debug {\r\n    a[href='#'] {\r\n        background-color: red;\r\n        border: 1px red;\r\n        box-shadow: 0px 0px 10px 0px red;\r\n    }\r\n}\r\n\r\nhtml {\r\n    line-height: 1.5;\r\n    $min-width: $tablet-width;\r\n    $max-width: $desktop-width;\r\n    $min-font: 14px;\r\n    $max-font: 19px;\r\n    @include fluid-font($min-width, $max-width, $min-font, $max-font);\r\n    box-sizing: border-box;\r\n    scroll-behavior: smooth;\r\n\r\n    @if not $debug {\r\n        user-zoom: fixed;\r\n    }\r\n}\r\n\r\n*, \r\n:before, \r\n:after {\r\n    box-sizing: inherit;\r\n    // box-sizing: inherit;\r\n}\r\n\r\nul {\r\n    margin: 0;\r\n    list-style: none;\r\n}\r\n\r\nbody {\r\n    padding: 0;\r\n    margin: 0;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -webkit-font-smoothing: antialiased;\r\n    font-family: $main-font;\r\n    color: get-color(tri3);\r\n    // font-smoothing: antialiased;\r\n    text-rendering: optimizeLegibility;\r\n    \r\n    // font-smooth: auto;\r\n\r\n    @if not $debug {\r\n        // user-zoom: fixed;    \r\n        /* Prevent native touch events on Windows */\r\n        -moz-text-size-adjust: none;\r\n        -moz-user-select: none;\r\n        -ms-text-size-adjust: none;\r\n        -ms-touch-action: none;\r\n        -ms-user-select: none;\r\n        -o-text-size-adjust: none;\r\n        -webkit-text-size-adjust: none;\r\n        -webkit-touch-callout: none;\r\n        -webkit-user-select: none;\r\n        text-size-adjust: none;\r\n        \r\n        /* Prevent text resize on orientation change, useful for web-apps */\r\n        user-select: none;\r\n    \r\n        /* Prevent the callout on tap-hold and text selection */\r\n    \r\n    }\r\n}\r\n\r\n%main-font {\r\n    font-family: $main-font;\r\n}\r\n\r\n@for $i from 1 through 6 {\r\n    h#{$i} {\r\n        // font-family: $main-font;\r\n        @extend %main-font;\r\n    }\r\n}\r\n\r\na {\r\n    &:not(:hover) {\r\n        color: get-color(tri3);\r\n        text-decoration: none; // text-decoration-color: var(--tc-grey);\r\n    }\r\n\r\n    &:hover {\r\n        color: get-color(tri3);\r\n        // text-decoration: none;\r\n    }\r\n}\r\n\r\ncode {\r\n    font-family: monospace;\r\n}\r\n\r\nfigure {\r\n    width: 100%;\r\n    height: auto;\r\n    padding: 0;\r\n    margin: 0;\r\n\r\n    img {\r\n        width: 100%;\r\n        height: auto;\r\n        padding: 0;\r\n        margin: 0;\r\n        object-fit: contain;\r\n        object-position: center;\r\n    }\r\n}\r\n\r\np {\r\n    font-weight: 300;\r\n    color: get-color(tri3);\r\n}\r\n\r\n.row {\r\n    @extend %row;\r\n}\r\n","@function strip-unit($number) {\r\n    @if type-of($number)== 'number' and not unitless($number) {\r\n        @return $number / ($number * 0 + 1);\r\n    }\r\n\r\n    @return $number;\r\n}\r\n\r\n@mixin fluid-font($min-vw, $max-vw, $min-font-size, $max-font-size) {\r\n    $u1: unit($min-vw);\r\n    $u2: unit($max-vw);\r\n    $u3: unit($min-font-size);\r\n    $u4: unit($max-font-size);\r\n\r\n    @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {\r\n        &   {\r\n            font-size: $min-font-size;\r\n            @media screen and (min-width: $min-vw) {\r\n                font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));\r\n            }\r\n            @media screen and (min-width: $max-vw) {\r\n                font-size: $max-font-size;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {\r\n  @each $property in $properties {\r\n    #{$property}: $min-value;\r\n  }\r\n\r\n  @media (min-width: $min-vw) {\r\n    @each $property in $properties {\r\n      #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});\r\n    }\r\n  }\r\n\r\n  @media (min-width: $max-vw) {\r\n    @each $property in $properties {\r\n      #{$property}: $max-value;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\r\n\t& {\r\n\t\t@each $property in $properties {\r\n\t\t\t#{$property}: $min-value;\r\n\t\t}\r\n\r\n\t\t@media screen and (min-width: $min-screen) {\r\n\t\t\t@each $property in $properties {\r\n\t\t\t\t#{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value); \r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t@media screen and (min-width: $max-screen) {\r\n\t\t\t@each $property in $properties {\r\n\t\t\t\t#{$property}: $max-value;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Requires the calc-interpolation function which can also be used independently\r\n\r\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\r\n\t$a: ($max-value - $min-value) / ($max-screen - $min-screen);\r\n\t$b: $min-value - $a * $min-screen; \r\n\r\n\t$sign: \"+\";\r\n\t@if ($b < 0) {\r\n\t\t$sign: \"-\";\r\n\t\t$b: abs($b);\r\n\t}\r\n\t@return calc(#{$a*100}vw #{$sign} #{$b});\r\n}",".nav {\r\n    background: Red;\r\n    // min-height: 100px;\r\n    padding-bottom: 20px;\r\n  clip-path: url(#navClip);\r\n  }\r\n  ",".footer {\r\n    @include grid3;\r\n    justify-content: center;\r\n    padding: $spacing;\r\n    background: steelblue;\r\n    &__nav ul {\r\n        display: flex;\r\n        flex-direction: column;\r\n    \r\n        & li {\r\n        padding: $padding__botton-small;\r\n        background: red;\r\n        display: inline-block;\r\n    }\r\n    }\r\n}\r\n  ","\r\n// @mixin grid3($gap){\r\n//     display: grid;\r\n//     gap: $gap;\r\n//     grid-template-columns: 1fr;\r\n//     @include media('>phone'){\r\n//         grid-template-columns: repeat(3, 1fr);\r\n//     }\r\n// }\r\n@mixin grid3{\r\n    display: grid;\r\n    grid-gap: $spacing;\r\n    grid-template-columns: 1fr;\r\n    @include media('>tablet'){\r\n        grid-template-columns: 1fr 1fr;\r\n    }\r\n    @include media('>desktop'){\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n    }\r\n}\r\n\r\n@mixin grid4($gap){\r\n    display: grid;\r\n    gap: $gap;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    @include mq-phone{\r\n        grid-template-columns: 1fr;\r\n    }\r\n    @include mq-tablet{\r\n        grid-template-columns: 1fr 1fr;\r\n    }\r\n}\r\n\r\n@mixin grid12($gap){\r\n    display: grid;\r\n    gap: $gap;\r\n    grid-template-columns: repeat(12, 1fr);\r\n}\r\n\r\n@mixin makeGrid($col, $gap) {\r\n    @if $col==3 {\r\n        @include grid3($gap);\r\n    }\r\n    @if $col==4 {\r\n        @include grid4($gap);\r\n    }\r\n    @if $col==12 {\r\n        @include grid12($gap);\r\n    }\r\n    @else {\r\n        @warn 'invalid number of grid, you fucking n00b!';\r\n    }\r\n}\r\n\r\n$grid-gap: 16px !default;\r\n\r\n@mixin mkGrid($col, $gap: $grid-gap) {\r\n    display: grid;\r\n    grid-template-columns: repeat(#{$col}, 1fr);\r\n    \r\n    @if not $gap == false {\r\n        gap: $gap;\r\n    }\r\n\r\n\r\n    @include mq-phone{\r\n        grid-template-columns: 1fr;\r\n    }\r\n    @include mq-tablet{\r\n        grid-template-columns: 1fr 1fr;\r\n    }\r\n}\r\n\r\n","@charset \"UTF-8\";\r\n\r\n//     _            _           _                           _ _\r\n//    (_)          | |         | |                         | (_)\r\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\r\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\r\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\r\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\r\n//\r\n//      Simple, elegant and maintainable media queries in Sass\r\n//                        v1.4.9\r\n//\r\n//                http://include-media.com\r\n//\r\n//         Authors: Eduardo Boucas (@eduardoboucas)\r\n//                  Hugo Giraudel (@hugogiraudel)\r\n//\r\n//      This project is licensed under the terms of the MIT license\r\n\r\n\r\n////\r\n/// include-media library public configuration\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n$breakpoints: (\r\n  'phone': 320px,\r\n  'tablet': 768px,\r\n  'desktop': 1024px,\r\n) !default;\r\n\r\n@function getBp($bp) {\r\n  @if not map-has-key($map: $breakpoints, $key: $bp) {\r\n    @warn 'Breakpoint not found. Breakpoints available: #{map-keys($map: $breakpoints)}.';\r\n    @return $bp;\r\n  }\r\n  @return map-get($map: $breakpoints, $key: #{$bp});\r\n}\r\n\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\r\n///  );\r\n///\r\n$media-expressions: (\r\n  'screen': 'screen',\r\n  'print': 'print',\r\n  'handheld': 'handheld',\r\n  'landscape': '(orientation: landscape)',\r\n  'portrait': '(orientation: portrait)',\r\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\r\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\r\n) !default;\r\n\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media('>128px') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media('>20em') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media('>2.0rem') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  'px': 1,\r\n  'em': 0.01,\r\n  'rem': 0.1,\r\n  '': 0\r\n) !default;\r\n\r\n///\r\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\r\n/// for browsers that don't support media queries.\r\n///\r\n/// @example scss - Disables support for media queries\r\n///  $im-media-support: false;\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n$im-media-support: true !default;\r\n\r\n///\r\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\r\n/// intercept the breakpoint will be displayed, any others will be ignored.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'tablet';\r\n///  @include media('>=desktop') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-breakpoint: 'desktop' !default;\r\n\r\n///\r\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\r\n/// are not supported.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'screen') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///   /* Generates: */\r\n///   .foo {\r\n///     color: tomato;\r\n///   }\r\n///\r\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'retina2x') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\r\n\r\n////\r\n/// Cross-engine logging engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Log a message either with `@error` if supported\r\n/// else with `@warn`, using `feature-exists('at-error')`\r\n/// to detect support.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@function im-log($message) {\r\n  @if feature-exists('at-error') {\r\n    @error $message;\r\n  } @else {\r\n    @warn $message;\r\n    $_: noop();\r\n  }\r\n\r\n  @return $message;\r\n}\r\n\r\n\r\n///\r\n/// Wrapper mixin for the log function so it can be used with a more friendly\r\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\r\n/// within functions because it is not possible to include a mixin in a function\r\n/// and use the mixin everywhere else because it's much more elegant.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@mixin log($message) {\r\n  @if im-log($message) {}\r\n}\r\n\r\n\r\n///\r\n/// Function with no `@return` called next to `@warn` in Sass 3.3\r\n/// to trigger a compiling error and stop the process.\r\n///\r\n@function noop() {}\r\n\r\n///\r\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\r\n///\r\n@function im-intercepts-static-breakpoint($conditions...) {\r\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\r\n\r\n  @if not $no-media-breakpoint-value {\r\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\r\n  }\r\n\r\n  @each $condition in $conditions {\r\n    @if not map-has-key($media-expressions, $condition) {\r\n      $operator: get-expression-operator($condition);\r\n      $prefix: get-expression-prefix($operator);\r\n      $value: get-expression-value($condition, $operator);\r\n\r\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\r\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\r\n        @return false;\r\n      }\r\n    } @else if not index($im-no-media-expressions, $condition) {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n\r\n////\r\n/// Parsing engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Get operator of an expression\r\n///\r\n/// @param {String} $expression - Expression to extract operator from\r\n///\r\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\r\n///\r\n@function get-expression-operator($expression) {\r\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\r\n    @if str-index($expression, $operator) {\r\n      @return $operator;\r\n    }\r\n  }\r\n\r\n  // It is not possible to include a mixin inside a function, so we have to\r\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n  // functions cannot be called anywhere in Sass, we need to hack the call in\r\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n  $_: im-log('No operator found in `#{$expression}`.');\r\n}\r\n\r\n\r\n///\r\n/// Get dimension of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract dimension from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {String} - `width` or `height` (or potentially anything else)\r\n///\r\n@function get-expression-dimension($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\r\n  $dimension: 'width';\r\n\r\n  @if str-length($parsed-dimension) > 0 {\r\n    $dimension: $parsed-dimension;\r\n  }\r\n\r\n  @return $dimension;\r\n}\r\n\r\n\r\n///\r\n/// Get dimension prefix based on an operator\r\n///\r\n/// @param {String} $operator - Operator\r\n///\r\n/// @return {String} - `min` or `max`\r\n///\r\n@function get-expression-prefix($operator) {\r\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\r\n}\r\n\r\n\r\n///\r\n/// Get value of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract value from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {Number} - A numeric value\r\n///\r\n@function get-expression-value($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $value: str-slice($expression, $operator-index + str-length($operator));\r\n\r\n  @if map-has-key($breakpoints, $value) {\r\n    $value: map-get($breakpoints, $value);\r\n  } @else {\r\n    $value: to-number($value);\r\n  }\r\n\r\n  $interval: map-get($unit-intervals, unit($value));\r\n\r\n  @if not $interval {\r\n    // It is not possible to include a mixin inside a function, so we have to\r\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n    // functions cannot be called anywhere in Sass, we need to hack the call in\r\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n    $_: im-log('Unknown unit `#{unit($value)}`.');\r\n  }\r\n\r\n  @if $operator == '>' {\r\n    $value: $value + $interval;\r\n  } @else if $operator == '<' {\r\n    $value: $value - $interval;\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n\r\n///\r\n/// Parse an expression to return a valid media-query expression\r\n///\r\n/// @param {String} $expression - Expression to parse\r\n///\r\n/// @return {String} - Valid media query\r\n///\r\n@function parse-expression($expression) {\r\n  // If it is part of $media-expressions, it has no operator\r\n  // then there is no need to go any further, just return the value\r\n  @if map-has-key($media-expressions, $expression) {\r\n    @return map-get($media-expressions, $expression);\r\n  }\r\n\r\n  $operator: get-expression-operator($expression);\r\n  $dimension: get-expression-dimension($expression, $operator);\r\n  $prefix: get-expression-prefix($operator);\r\n  $value: get-expression-value($expression, $operator);\r\n\r\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\r\n}\r\n\r\n///\r\n/// Slice `$list` between `$start` and `$end` indexes\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list - List to slice\r\n/// @param {Number} $start [1] - Start index\r\n/// @param {Number} $end [length($list)] - End index\r\n///\r\n/// @return {List} Sliced list\r\n///\r\n@function slice($list, $start: 1, $end: length($list)) {\r\n  @if length($list) < 1 or $start > $end {\r\n    @return ();\r\n  }\r\n\r\n  $result: ();\r\n\r\n  @for $i from $start through $end {\r\n    $result: append($result, nth($list, $i));\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Casts a string into a number\r\n///\r\n/// @param {String | Number} $value - Value to be parsed\r\n///\r\n/// @return {Number}\r\n///\r\n@function to-number($value) {\r\n  @if type-of($value) == 'number' {\r\n    @return $value;\r\n  } @else if type-of($value) != 'string' {\r\n    $_: im-log('Value for `to-number` should be a number or a string.');\r\n  }\r\n\r\n  $first-character: str-slice($value, 1, 1);\r\n  $result: 0;\r\n  $digits: 0;\r\n  $minus: ($first-character == '-');\r\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\r\n\r\n  // Remove +/- sign if present at first character\r\n  @if ($first-character == '+' or $first-character == '-') {\r\n    $value: str-slice($value, 2);\r\n  }\r\n\r\n  @for $i from 1 through str-length($value) {\r\n    $character: str-slice($value, $i, $i);\r\n\r\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\r\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\r\n    }\r\n\r\n    @if $character == '.' {\r\n      $digits: 1;\r\n    } @else if $digits == 0 {\r\n      $result: $result * 10 + map-get($numbers, $character);\r\n    } @else {\r\n      $digits: $digits * 10;\r\n      $result: $result + map-get($numbers, $character) / $digits;\r\n    }\r\n  }\r\n\r\n  @return if($minus, -$result, $result);\r\n}\r\n\r\n\r\n///\r\n/// Add `$unit` to `$value`\r\n///\r\n/// @param {Number} $value - Value to add unit to\r\n/// @param {String} $unit - String representation of the unit\r\n///\r\n/// @return {Number} - `$value` expressed in `$unit`\r\n///\r\n@function to-length($value, $unit) {\r\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\r\n\r\n  @if not index(map-keys($units), $unit) {\r\n    $_: im-log('Invalid unit `#{$unit}`.');\r\n  }\r\n\r\n  @return $value * map-get($units, $unit);\r\n}\r\n\r\n///\r\n/// This mixin aims at redefining the configuration just for the scope of\r\n/// the call. It is helpful when having a component needing an extended\r\n/// configuration such as custom breakpoints (referred to as tweakpoints)\r\n/// for instance.\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\r\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\r\n///\r\n/// @example scss - Extend the global breakpoints with a tweakpoint\r\n///  @include media-context(('custom': 678px)) {\r\n///    .foo {\r\n///      @include media('>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend the global media expressions with a custom one\r\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend both configuration maps\r\n///  @include media-context(('custom': 678px), ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\r\n  // Save global configuration\r\n  $global-breakpoints: $breakpoints;\r\n  $global-media-expressions: $media-expressions;\r\n\r\n  // Update global configuration\r\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\r\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\r\n\r\n  @content;\r\n\r\n  // Restore global configuration\r\n  $breakpoints: $global-breakpoints !global;\r\n  $media-expressions: $global-media-expressions !global;\r\n}\r\n\r\n////\r\n/// include-media public exposed API\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media('>phone') { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media('>phone', '<=tablet') { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media('>=358px', '<850px') { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media('>desktop', '<=1350px') { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media('retina2x') { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media('>=350px', '<tablet', 'retina3x') { }\r\n///\r\n@mixin media($conditions...) {\r\n  @if ($im-media-support and length($conditions) == 0) or\r\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\r\n    @content;\r\n  } @else if ($im-media-support and length($conditions) > 0) {\r\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\r\n      // Recursive call\r\n      @include media(slice($conditions, 2)...) {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}