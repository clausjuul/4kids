{"version":3,"sources":["<no source>","vendor/_normalize8-not-sass.scss","style.css","abstracts/variables/_variables.scss","base/_resets.scss","abstracts/mixins/_typography.scss","components/_nav.scss","abstracts/functions/_sizing-functions.scss","vendor/_include-media.scss"],"names":[],"mappings":"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","file":"../style.css","sourcesContent":[null,"// /*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */\r\n// /* Document\r\n//    ========================================================================== */\r\n// /**\r\n//  * 1. Correct the line height in all browsers.\r\n//  * 2. Prevent adjustments of font size after orientation changes in iOS.\r\n//  */\r\n//  html {\r\n//     line-height: 1.15; /* 1 */\r\n//     -webkit-text-size-adjust: 100%; /* 2 */\r\n//   }\r\n//   /* Sections\r\n//      ========================================================================== */\r\n//   /**\r\n//    * Remove the margin in all browsers.\r\n//    */\r\n//   body {\r\n//     margin: 0;\r\n//   }\r\n//   /**\r\n//    * Correct the font size and margin on `h1` elements within `section` and\r\n//    * `article` contexts in Chrome, Firefox, and Safari.\r\n//    */\r\n//   h1 {\r\n//     font-size: 2em;\r\n//     margin: 0.67em 0;\r\n//   }\r\n//   /* Grouping content\r\n//      ========================================================================== */\r\n//   /**\r\n//    * 1. Add the correct box sizing in Firefox.\r\n//    * 2. Show the overflow in Edge and IE.\r\n//    */\r\n//   hr {\r\n//     box-sizing: content-box; /* 1 */\r\n//     height: 0; /* 1 */\r\n//     overflow: visible; /* 2 */\r\n//   }\r\n//   /**\r\n//    * 1. Correct the inheritance and scaling of font size in all browsers.\r\n//    * 2. Correct the odd `em` font sizing in all browsers.\r\n//    */\r\n//   pre {\r\n//     font-family: monospace, monospace; /* 1 */\r\n//     font-size: 1em; /* 2 */\r\n//   }\r\n//   /* Text-level semantics\r\n//      ========================================================================== */\r\n//   /**\r\n//    * Remove the gray background on active links in IE 10.\r\n//    */\r\n//   a {\r\n//     background-color: transparent;\r\n//   }\r\n//   /**\r\n//    * 1. Remove the bottom border in Chrome 57-\r\n//    * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\r\n//    */\r\n//   abbr[title] {\r\n//     border-bottom: none; /* 1 */\r\n//     text-decoration: underline; /* 2 */\r\n//     text-decoration: underline dotted; /* 2 */\r\n//   }\r\n//   /**\r\n//    * Add the correct font weight in Chrome, Edge, and Safari.\r\n//    */\r\n//   b,\r\n//   strong {\r\n//     font-weight: bolder;\r\n//   }\r\n//   /**\r\n//    * 1. Correct the inheritance and scaling of font size in all browsers.\r\n//    * 2. Correct the odd `em` font sizing in all browsers.\r\n//    */\r\n//   code,\r\n//   kbd,\r\n//   samp {\r\n//     font-family: monospace, monospace; /* 1 */\r\n//     font-size: 1em; /* 2 */\r\n//   }\r\n//   /**\r\n//    * Add the correct font size in all browsers.\r\n//    */\r\n//   small {\r\n//     font-size: 80%;\r\n//   }\r\n//   /**\r\n//    * Prevent `sub` and `sup` elements from affecting the line height in\r\n//    * all browsers.\r\n//    */\r\n//   sub,\r\n//   sup {\r\n//     font-size: 75%;\r\n//     line-height: 0;\r\n//     position: relative;\r\n//     vertical-align: baseline;\r\n//   }\r\n//   sub {\r\n//     bottom: -0.25em;\r\n//   }\r\n//   sup {\r\n//     top: -0.5em;\r\n//   }\r\n//   /* Embedded content\r\n//      ========================================================================== */\r\n//   /**\r\n//    * Remove the border on images inside links in IE 10.\r\n//    */\r\n//   img {\r\n//     border-style: none;\r\n//   }\r\n//   /* Forms\r\n//      ========================================================================== */\r\n//   /**\r\n//    * 1. Change the font styles in all browsers.\r\n//    * 2. Remove the margin in Firefox and Safari.\r\n//    */\r\n//   button,\r\n//   input,\r\n//   optgroup,\r\n//   select,\r\n//   textarea {\r\n//     font-family: inherit; /* 1 */\r\n//     font-size: 100%; /* 1 */\r\n//     line-height: 1.15; /* 1 */\r\n//     margin: 0; /* 2 */\r\n//   }\r\n//   /**\r\n//    * Show the overflow in IE.\r\n//    * 1. Show the overflow in Edge.\r\n//    */\r\n//   button,\r\n//   input { /* 1 */\r\n//     overflow: visible;\r\n//   }\r\n//   /**\r\n//    * Remove the inheritance of text transform in Edge, Firefox, and IE.\r\n//    * 1. Remove the inheritance of text transform in Firefox.\r\n//    */\r\n//   button,\r\n//   select { /* 1 */\r\n//     text-transform: none;\r\n//   }\r\n//   /**\r\n//    * Correct the inability to style clickable types in iOS and Safari.\r\n//    */\r\n//   button,\r\n//   [type=\"button\"],\r\n//   [type=\"reset\"],\r\n//   [type=\"submit\"] {\r\n//     -webkit-appearance: button;\r\n//   }\r\n//   /**\r\n//    * Remove the inner border and padding in Firefox.\r\n//    */\r\n//   button::-moz-focus-inner,\r\n//   [type=\"button\"]::-moz-focus-inner,\r\n//   [type=\"reset\"]::-moz-focus-inner,\r\n//   [type=\"submit\"]::-moz-focus-inner {\r\n//     border-style: none;\r\n//     padding: 0;\r\n//   }\r\n//   /**\r\n//    * Restore the focus styles unset by the previous rule.\r\n//    */\r\n//   button:-moz-focusring,\r\n//   [type=\"button\"]:-moz-focusring,\r\n//   [type=\"reset\"]:-moz-focusring,\r\n//   [type=\"submit\"]:-moz-focusring {\r\n//     outline: 1px dotted ButtonText;\r\n//   }\r\n//   /**\r\n//    * Correct the padding in Firefox.\r\n//    */\r\n//   fieldset {\r\n//     padding: 0.35em 0.75em 0.625em;\r\n//   }\r\n//   /**\r\n//    * 1. Correct the text wrapping in Edge and IE.\r\n//    * 2. Correct the color inheritance from `fieldset` elements in IE.\r\n//    * 3. Remove the padding so developers are not caught out when they zero out\r\n//    *    `fieldset` elements in all browsers.\r\n//    */\r\n//   legend {\r\n//     box-sizing: border-box; /* 1 */\r\n//     color: inherit; /* 2 */\r\n//     display: table; /* 1 */\r\n//     max-width: 100%; /* 1 */\r\n//     padding: 0; /* 3 */\r\n//     white-space: normal; /* 1 */\r\n//   }\r\n//   /**\r\n//    * Add the correct vertical alignment in Chrome, Firefox, and Opera.\r\n//    */\r\n//   progress {\r\n//     vertical-align: baseline;\r\n//   }\r\n//   /**\r\n//    * Remove the default vertical scrollbar in IE 10+.\r\n//    */\r\n//   textarea {\r\n//     overflow: auto;\r\n//   }\r\n//   /**\r\n//    * 1. Add the correct box sizing in IE 10.\r\n//    * 2. Remove the padding in IE 10.\r\n//    */\r\n//   [type=\"checkbox\"],\r\n//   [type=\"radio\"] {\r\n//     box-sizing: border-box; /* 1 */\r\n//     padding: 0; /* 2 */\r\n//   }\r\n//   /**\r\n//    * Correct the cursor style of increment and decrement buttons in Chrome.\r\n//    */\r\n//   [type=\"number\"]::-webkit-inner-spin-button,\r\n//   [type=\"number\"]::-webkit-outer-spin-button {\r\n//     height: auto;\r\n//   }\r\n//   /**\r\n//    * 1. Correct the odd appearance in Chrome and Safari.\r\n//    * 2. Correct the outline style in Safari.\r\n//    */\r\n//   [type=\"search\"] {\r\n//     -webkit-appearance: textfield; /* 1 */\r\n//     outline-offset: -2px; /* 2 */\r\n//   }\r\n//   /**\r\n//    * Remove the inner padding in Chrome and Safari on macOS.\r\n//    */\r\n//   [type=\"search\"]::-webkit-search-decoration {\r\n//     -webkit-appearance: none;\r\n//   }\r\n//   /**\r\n//    * 1. Correct the inability to style clickable types in iOS and Safari.\r\n//    * 2. Change font properties to `inherit` in Safari.\r\n//    */\r\n//   ::-webkit-file-upload-button {\r\n//     -webkit-appearance: button; /* 1 */\r\n//     font: inherit; /* 2 */\r\n//   }\r\n//   /* Interactive\r\n//      ========================================================================== */\r\n//   /*\r\n//    * Add the correct display in Edge, IE 10+, and Firefox.\r\n//    */\r\n//   details {\r\n//     display: block;\r\n//   }\r\n//   /*\r\n//    * Add the correct display in all browsers.\r\n//    */\r\n//   summary {\r\n//     display: list-item;\r\n//   }\r\n//   /* Misc\r\n//      ========================================================================== */\r\n//   /**\r\n//    * Add the correct display in IE 10+.\r\n//    */\r\n//   template {\r\n//     display: none;\r\n//   }\r\n//   /**\r\n//    * Add the correct display in IE 10.\r\n//    */\r\n//   [hidden] {\r\n//     display: none;\r\n//   }\r\nhtml {\r\n  line-height: 1.15;\r\n  -webkit-text-size-adjust: 100%\r\n}\r\n\r\nbody {\r\n  margin: 0\r\n}\r\n\r\nh1 {\r\n  font-size: 2em;\r\n  margin: .67em 0\r\n}\r\n\r\nhr {\r\n  box-sizing: content-box;\r\n  height: 0;\r\n  overflow: visible\r\n}\r\n\r\npre {\r\n  font-family: monospace, monospace;\r\n  font-size: 1em\r\n}\r\n\r\na {\r\n  background-color: transparent\r\n}\r\n\r\nabbr[title] {\r\n  border-bottom: none;\r\n  text-decoration: underline;\r\n  text-decoration: underline dotted\r\n}\r\n\r\nb,\r\nstrong {\r\n  font-weight: bolder\r\n}\r\n\r\ncode,\r\nkbd,\r\nsamp {\r\n  font-family: monospace, monospace;\r\n  font-size: 1em\r\n}\r\n\r\nsmall {\r\n  font-size: 80%\r\n}\r\n\r\nsub,\r\nsup {\r\n  font-size: 75%;\r\n  line-height: 0;\r\n  position: relative;\r\n  vertical-align: baseline\r\n}\r\n\r\nsub {\r\n  bottom: -.25em\r\n}\r\n\r\nsup {\r\n  top: -.5em\r\n}\r\n\r\nimg {\r\n  border-style: none\r\n}\r\n\r\nbutton,\r\ninput,\r\noptgroup,\r\nselect,\r\ntextarea {\r\n  font-family: inherit;\r\n  font-size: 100%;\r\n  line-height: 1.15;\r\n  margin: 0\r\n}\r\n\r\nbutton,\r\ninput {\r\n  overflow: visible\r\n}\r\n\r\nbutton,\r\nselect {\r\n  text-transform: none\r\n}\r\n\r\n[type=button],\r\n[type=reset],\r\n[type=submit],\r\nbutton {\r\n  -webkit-appearance: button\r\n}\r\n\r\n[type=button]::-moz-focus-inner,\r\n[type=reset]::-moz-focus-inner,\r\n[type=submit]::-moz-focus-inner,\r\nbutton::-moz-focus-inner {\r\n  border-style: none;\r\n  padding: 0\r\n}\r\n\r\n[type=button]:-moz-focusring,\r\n[type=reset]:-moz-focusring,\r\n[type=submit]:-moz-focusring,\r\nbutton:-moz-focusring {\r\n  outline: 1px dotted ButtonText\r\n}\r\n\r\nfieldset {\r\n  padding: .35em .75em .625em\r\n}\r\n\r\nlegend {\r\n  box-sizing: border-box;\r\n  color: inherit;\r\n  display: table;\r\n  max-width: 100%;\r\n  padding: 0;\r\n  white-space: normal\r\n}\r\n\r\nprogress {\r\n  vertical-align: baseline\r\n}\r\n\r\ntextarea {\r\n  overflow: auto\r\n}\r\n\r\n[type=checkbox],\r\n[type=radio] {\r\n  box-sizing: border-box;\r\n  padding: 0\r\n}\r\n\r\n[type=number]::-webkit-inner-spin-button,\r\n[type=number]::-webkit-outer-spin-button {\r\n  height: auto\r\n}\r\n\r\n[type=search] {\r\n  -webkit-appearance: textfield;\r\n  outline-offset: -2px\r\n}\r\n\r\n[type=search]::-webkit-search-decoration {\r\n  -webkit-appearance: none\r\n}\r\n\r\n::-webkit-file-upload-button {\r\n  -webkit-appearance: button;\r\n  font: inherit\r\n}\r\n\r\ndetails {\r\n  display: block\r\n}\r\n\r\nsummary {\r\n  display: list-item\r\n}\r\n\r\ntemplate {\r\n  display: none\r\n}\r\n\r\n[hidden] {\r\n  display: none\r\n}","html {\n  line-height: 1.15;\n  -webkit-text-size-adjust: 100%;\n}\n\nbody {\n  margin: 0;\n}\n\nh1 {\n  font-size: 2em;\n  margin: .67em 0;\n}\n\nhr {\n  box-sizing: content-box;\n  height: 0;\n  overflow: visible;\n}\n\npre {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\n\na {\n  background-color: transparent;\n}\n\nabbr[title] {\n  border-bottom: none;\n  text-decoration: underline;\n  text-decoration: underline dotted;\n}\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\n\nsmall {\n  font-size: 80%;\n}\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -.25em;\n}\n\nsup {\n  top: -.5em;\n}\n\nimg {\n  border-style: none;\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n  font-size: 100%;\n  line-height: 1.15;\n  margin: 0;\n}\n\nbutton,\ninput {\n  overflow: visible;\n}\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n[type=button],\n[type=reset],\n[type=submit],\nbutton {\n  -webkit-appearance: button;\n}\n\n[type=button]::-moz-focus-inner,\n[type=reset]::-moz-focus-inner,\n[type=submit]::-moz-focus-inner,\nbutton::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n[type=button]:-moz-focusring,\n[type=reset]:-moz-focusring,\n[type=submit]:-moz-focusring,\nbutton:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\nfieldset {\n  padding: .35em .75em .625em;\n}\n\nlegend {\n  box-sizing: border-box;\n  color: inherit;\n  display: table;\n  max-width: 100%;\n  padding: 0;\n  white-space: normal;\n}\n\nprogress {\n  vertical-align: baseline;\n}\n\ntextarea {\n  overflow: auto;\n}\n\n[type=checkbox],\n[type=radio] {\n  box-sizing: border-box;\n  padding: 0;\n}\n\n[type=number]::-webkit-inner-spin-button,\n[type=number]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n[type=search] {\n  -webkit-appearance: textfield;\n  outline-offset: -2px;\n}\n\n[type=search]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  font: inherit;\n}\n\ndetails {\n  display: block;\n}\n\nsummary {\n  display: list-item;\n}\n\ntemplate {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}\n\n/*\r\nRoot vars. STANDARD FONTS AND COLORS \r\n*/\nhtml {\n  box-sizing: border-box;\n  scroll-behavior: smooth;\n  user-zoom: fixed;\n}\n\nhtml {\n  font-size: 14px;\n}\n\n@media screen and (min-width: 768px) {\n  html {\n    font-size: calc(14px + 5 * ((100vw - 768px) / 256));\n  }\n}\n\n@media screen and (min-width: 1024px) {\n  html {\n    font-size: 19px;\n  }\n}\n\n*,\n:before,\n:after {\n  box-sizing: inherit;\n}\n\nul {\n  margin: 0;\n  list-style: none;\n}\n\nbody {\n  padding: 0;\n  margin: 0;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: \"Open Sans\", sans-serif;\n  color: #111;\n  text-rendering: optimizeLegibility;\n  /* Prevent native touch events on Windows */\n  -moz-text-size-adjust: none;\n  -moz-user-select: none;\n  -ms-text-size-adjust: none;\n  -ms-touch-action: none;\n  -ms-user-select: none;\n  -o-text-size-adjust: none;\n  -webkit-text-size-adjust: none;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  text-size-adjust: none;\n  /* Prevent text resize on orientation change, useful for web-apps */\n  user-select: none;\n  /* Prevent the callout on tap-hold and text selection */\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-family: \"Open Sans\", sans-serif;\n}\n\na:not(:hover) {\n  color: #111;\n  text-decoration: none;\n}\n\na:hover {\n  color: #111;\n}\n\na {\n  color: inherit;\n}\n\nfigure {\n  width: 100%;\n  height: auto;\n  padding: 0;\n  margin: 0;\n}\n\nfigure img {\n  width: 100%;\n  height: auto;\n  padding: 0;\n  margin: 0;\n  object-fit: contain;\n  object-position: center;\n}\n\np {\n  font-weight: 300;\n  color: #111;\n}\n\nbody {\n  background: #999;\n}\n\n.filler {\n  height: 100vh;\n}\n\n.navbar li, .navbar__open-button {\n  background-color: #bada55;\n  border-radius: 100%;\n  width: 5rem;\n  height: 5rem;\n  position: absolute;\n  color: white;\n  text-align: center;\n  left: calc(50% - 2.5rem);\n  transform: translate3d(0, 0, 0);\n  transition: transform 150ms;\n  transition-timing-function: cubic-bezier(0.48, -0.6, 0.345, 1.295);\n  /* custom */\n}\n\n.main-nav {\n  margin: 50px 0;\n  padding: 0;\n  position: fixed;\n  width: 100%;\n  height: 7.5rem;\n}\n\n@media (min-width: 1025px) {\n  .main-nav {\n    bottom: unset;\n  }\n}\n\n.navbar {\n  height: auto;\n  display: inline-block;\n  width: 35rem;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  position: relative;\n  left: 50%;\n  transform: translateX(-50%);\n  filter: url(\"#shadowed-goo\");\n  box-sizing: border-box;\n  font-size: 1.25rem;\n  text-align: left;\n}\n\n.navbar li {\n  transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  word-break: break-all;\n  display: flex;\n}\n\n.navbar li a {\n  justify-self: center;\n  align-self: center;\n  width: 100%;\n  text-align: center;\n}\n\n.navbar li span {\n  width: 1.5625rem;\n  height: 0.1875rem;\n  background: white;\n  display: block;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-left: -0.78125rem;\n  margin-top: -0.09375rem;\n  transition: transform 200ms;\n}\n\n.navbar li span:nth-child(1) {\n  transform: translate3d(0, -0.5rem, 0);\n}\n\n.navbar li span:nth-child(2) {\n  transform: translate3d(0, 0, 0);\n}\n\n.navbar li span:nth-child(3) {\n  transform: translate3d(0, 0.5rem, 0);\n}\n\n.navbar__open-button {\n  z-index: 200;\n  transition-timing-function: cubic-bezier(0.48, -0.6, 0.515, 1.58);\n  /* custom */\n  transition-duration: 400ms;\n  cursor: pointer;\n  line-height: 100%;\n}\n\n@keyframes playMenu {\n  0% {\n    background-position: 0px 0px;\n  }\n  100% {\n    background-position: -4320px 0px;\n  }\n}\n\n.navbar--open li {\n  transition-timing-function: cubic-bezier(0.48, -0.6, 0.345, 1.295);\n  /* custom */\n}\n\n.navbar--open li:nth-child(1) {\n  /* left */\n  transition-duration: 730ms;\n  transform: translate3d(-15rem, 1.875rem, 0);\n}\n\n.navbar--open li:nth-child(2) {\n  /* left */\n  transition-duration: 650ms;\n  transform: translate3d(-10rem, 1.25rem, 0);\n}\n\n.navbar--open li:nth-child(3) {\n  /* left */\n  transition-duration: 570ms;\n  transform: translate3d(-5rem, 0.625rem, 0);\n}\n\n.navbar--open li:nth-child(5) {\n  /* right */\n  transition-duration: 570ms;\n  transform: translate3d(5rem, 0.625rem, 0);\n}\n\n.navbar--open li:nth-child(6) {\n  /* right */\n  transition-duration: 650ms;\n  transform: translate3d(10rem, 1.25rem, 0);\n}\n\n.navbar--open li:nth-child(7) {\n  /* right */\n  transition-duration: 730ms;\n  transform: translate3d(15rem, 1.875rem, 0);\n}\n\n.navbar--open .navbar__open-button {\n  /* custom */\n  transition-timing-function: cubic-bezier(0.48, -0.6, 0.515, 1.58);\n  /* custom */\n  transition-duration: 400ms;\n  transform: scale(0.85, 0.85) translate3d(0, 0, 0);\n  background: #fada77;\n}\n\n.navbar--open .navbar__open-button span:nth-child(1) {\n  transform: translate3d(0, 0, 0) rotate(45deg);\n}\n\n.navbar--open .navbar__open-button span:nth-child(2) {\n  transform: translate3d(0, 0, 0) scale(0.1, 1);\n}\n\n.navbar--open .navbar__open-button span:nth-child(3) {\n  transform: translate3d(0, 0, 0) rotate(-45deg);\n}\n","// /**************************************************\r\n// Generel variables for framework\r\n// ***************************************************/\r\n\r\n// Getting fonts\r\n\r\n// Imports are now handled by font-magician\r\n// @import url('https://fonts.googleapis.com/css?family=Ubuntu:300,400,500,700');\r\n\r\n//\r\n// SCSS VARS_____________________\r\n//\r\n// Fonts and fallbacks\r\n$main-font: 'Open Sans', sans-serif;\r\n\r\n// Core Colors.\r\n// tc = Theme Color;\r\n$tc-ubuntu-orange: #E95420;\r\n$tc-white: #FFF;\r\n$tc-black: #000;\r\n\r\n// Supporting colors\r\n$tc-light-aubergine: #77216F;\r\n$tc-mid-aubergine: #5E2750;\r\n$tc-dark-aubergine: #2C001E;\r\n\r\n// Neutral colors\r\n$tc-warm-grey: #AEA79F;\r\n$tc-cool-grey: #333;\r\n$tc-txt-grey: #111;\r\n\r\n$color-theme: (\r\n    prim1: $tc-ubuntu-orange,\r\n    prim2: $tc-white,\r\n    prim3: $tc-black,\r\n    sec1: $tc-light-aubergine,\r\n    sec2: $tc-mid-aubergine,\r\n    sec3: $tc-dark-aubergine,\r\n    tri1: $tc-warm-grey,\r\n    tri2: $tc-cool-grey,\r\n    tri3: $tc-txt-grey\r\n);\r\n\r\n//navigation\r\n// $nav-height: px2rem(100px);\r\n$nav-height: px2rem(100px);\r\n\r\n\r\n@function get-color($key) {\r\n    @if not map-has-key($color-theme, $key) {\r\n        @warn 'no color with that name found.';\r\n        @return deeppink;\r\n    } @else {\r\n        @return map-get($color-theme, $key);\r\n    }\r\n}\r\n\r\n\r\n$breakpoints: (\r\n    'phone': 300px,\r\n    'tablet': 768px,\r\n    'desktop': 1024px\r\n);\r\n// ) !default;\r\n\r\n$gridcontainer-exists: true;\r\n\r\n$debug: false;\r\n\r\n/*\r\nRoot vars. STANDARD FONTS AND COLORS \r\n*/\r\n// :root {\r\n//     // /* FONTS AND FALLBACKS */\r\n    \r\n    \r\n//     // /* Calculation */\r\n//     // --respaonsive: calc((var(--min-font) * 1px) + (var(--max-font) - var(--min-font)) * ((100vw - 100px) / (1200 - 100))); /* Ranges from 421px to 1199px */\r\n// }\r\n","$debug: false !default;\r\n\r\n// Check for dead links during development\r\n@mixin debug($debug: $debug) {\r\n    @if $debug {\r\n        @content;\r\n    }\r\n}\r\n\r\n@include debug {\r\n    a[href='#'] {\r\n        background-color: red;\r\n        border: 1px red;\r\n        box-shadow: 0px 0px 10px 0px red;\r\n    }\r\n}\r\n\r\nhtml {\r\n    $min-width: getBp('tablet');\r\n    $max-width: getBp('desktop');\r\n    $min-font: 14px;\r\n    $max-font: 19px;\r\n    @include fluid-font($min-width, $max-width, $min-font, $max-font);\r\n    box-sizing: border-box;\r\n    scroll-behavior: smooth;\r\n\r\n    @if not $debug {\r\n        user-zoom: fixed;\r\n    }\r\n}\r\n\r\n*, \r\n:before, \r\n:after {\r\n    box-sizing: inherit;\r\n    // box-sizing: inherit;\r\n}\r\n\r\nul {\r\n    margin: 0;\r\n    list-style: none;\r\n}\r\n\r\nbody {\r\n    padding: 0;\r\n    margin: 0;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -webkit-font-smoothing: antialiased;\r\n    font-family: $main-font;\r\n    color: get-color(tri3);\r\n    // font-smoothing: antialiased;\r\n    text-rendering: optimizeLegibility;\r\n    \r\n    // font-smooth: auto;\r\n\r\n    @if not $debug {\r\n        // user-zoom: fixed;    \r\n        /* Prevent native touch events on Windows */\r\n        -moz-text-size-adjust: none;\r\n        -moz-user-select: none;\r\n        -ms-text-size-adjust: none;\r\n        -ms-touch-action: none;\r\n        -ms-user-select: none;\r\n        -o-text-size-adjust: none;\r\n        -webkit-text-size-adjust: none;\r\n        -webkit-touch-callout: none;\r\n        -webkit-user-select: none;\r\n        text-size-adjust: none;\r\n        \r\n        /* Prevent text resize on orientation change, useful for web-apps */\r\n        user-select: none;\r\n    \r\n        /* Prevent the callout on tap-hold and text selection */\r\n    \r\n    }\r\n}\r\n\r\n%main-font {\r\n    font-family: $main-font;\r\n}\r\n\r\n@for $i from 1 through 6 {\r\n    h#{$i} {\r\n        // font-family: $main-font;\r\n        @extend %main-font;\r\n    }\r\n}\r\n\r\na {\r\n    &:not(:hover) {\r\n        color: get-color(tri3);\r\n        text-decoration: none; // text-decoration-color: var(--tc-grey);\r\n    }\r\n\r\n    &:hover {\r\n        color: get-color(tri3);\r\n        // text-decoration: none;\r\n    }\r\n}\r\n\r\na { \r\n    color: inherit;\r\n}\r\n\r\nfigure {\r\n    width: 100%;\r\n    height: auto;\r\n    padding: 0;\r\n    margin: 0;\r\n\r\n    img {\r\n        width: 100%;\r\n        height: auto;\r\n        padding: 0;\r\n        margin: 0;\r\n        object-fit: contain;\r\n        object-position: center;\r\n    }\r\n}\r\n\r\np {\r\n    font-weight: 300;\r\n    color: get-color(tri3);\r\n}","@function strip-unit($number) {\r\n    @if type-of($number)== 'number' and not unitless($number) {\r\n        @return $number / ($number * 0 + 1);\r\n    }\r\n\r\n    @return $number;\r\n}\r\n\r\n@mixin fluid-font($min-vw, $max-vw, $min-font-size, $max-font-size) {\r\n    $u1: unit($min-vw);\r\n    $u2: unit($max-vw);\r\n    $u3: unit($min-font-size);\r\n    $u4: unit($max-font-size);\r\n\r\n    @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {\r\n        &   {\r\n            font-size: $min-font-size;\r\n            @media screen and (min-width: $min-vw) {\r\n                font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));\r\n            }\r\n            @media screen and (min-width: $max-vw) {\r\n                font-size: $max-font-size;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {\r\n  @each $property in $properties {\r\n    #{$property}: $min-value;\r\n  }\r\n\r\n  @media (min-width: $min-vw) {\r\n    @each $property in $properties {\r\n      #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});\r\n    }\r\n  }\r\n\r\n  @media (min-width: $max-vw) {\r\n    @each $property in $properties {\r\n      #{$property}: $max-value;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\r\n\t& {\r\n\t\t@each $property in $properties {\r\n\t\t\t#{$property}: $min-value;\r\n\t\t}\r\n\r\n\t\t@media screen and (min-width: $min-screen) {\r\n\t\t\t@each $property in $properties {\r\n\t\t\t\t#{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value); \r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t@media screen and (min-width: $max-screen) {\r\n\t\t\t@each $property in $properties {\r\n\t\t\t\t#{$property}: $max-value;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Requires the calc-interpolation function which can also be used independently\r\n\r\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\r\n\t$a: ($max-value - $min-value) / ($max-screen - $min-screen);\r\n\t$b: $min-value - $a * $min-screen; \r\n\r\n\t$sign: \"+\";\r\n\t@if ($b < 0) {\r\n\t\t$sign: \"-\";\r\n\t\t$b: abs($b);\r\n\t}\r\n\t@return calc(#{$a*100}vw #{$sign} #{$b});\r\n}","$menu-color: #bada55;\n\n$menu-active-color: #fada77;\n\n$burger-color: white;\n\n$menu-items: 6;\n\n$menu-item-size: 80px;\n\n$menu-item-gap: 0px;\n\n$pix-dir: 10px;\n\n$start-at-menu: false;\n\nbody {\n    background: #999\n}\n\n.filler {\n    height: 100vh;\n}\n\n%ball {\n    background-color: $menu-color;\n    border-radius: 100%;\n    // width: px2rem(80px);\n    // height: px2rem(80px);\n    width: px2rem($menu-item-size);\n    height: px2rem($menu-item-size);\n    position: absolute;\n    color: white;\n    text-align: center;\n    left: calc(50% - #{px2rem($menu-item-size / 2)});\n    transform: translate3d(0, 0, 0);\n    transition: transform 150ms;\n    transition-timing-function: cubic-bezier(0.480, -0.600, 0.345, 1.295);\n    /* custom */\n}\n\n\n.main-nav {\n    margin: 50px 0;\n    padding: 0;\n    // width: 100%;\n    position: fixed;\n    width: 100%;\n    // bottom: 0;\n    height: px2rem($menu-item-size * 1.5);\n\n    // $min-width: $tablet-width;\n    // $max-width: $desktop-width;\n    // $min-font: 12px;\n    // $max-font: 20px;\n    // @include fluid-font($min-width, $max-width, $min-font, $max-font);\n\n    @include media('>desktop') {\n        bottom: unset;\n    }\n}\n\n.navbar {\n    \n    height: auto;\n    display: inline-block;\n    width: px2rem($menu-item-size * ($menu-items + 1));\n    // width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    position: relative;\n    // left: calc(50% - #{px2rem(($menu-item-size * $menu-items + 1) / 2)});\n    left: 50%;\n    transform: translateX(-50%);\n\n    // top: px2rem(90px);\n    // left: 50%;\n    // transform: translate(-50%, 0);\n    // position: fixed;\n    // bottom: 100%;\n    // top: -40px;\n    // bottom: px2rem(30px);\n    // left:50%;\n    filter: url('#shadowed-goo');\n    // z-index: 300;  \n\n\n    // opacity: 1;\n    box-sizing: border-box;\n    font-size: px2rem(20px);\n    text-align: left;\n\n \n\n\n\n    li {\n        @extend %ball;\n        transition-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1.275);\n        // transition-timing-function: cubic-bezier(0.480, -0.600, 0.515, 1.580); /* custom */\n        word-break: break-all;\n        display: flex;\n\n        a {\n            // line-height: 100%;\n            justify-self: center;\n            align-self: center;\n            width: 100%;\n            text-align: center;\n        }\n\n        span {\n            $width: 25px;\n            $height: 3px;\n            width: px2rem($width);\n            height: px2rem($height);\n            background: $burger-color;\n            display: block;\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            margin-left: px2rem(-$width/2);\n            margin-top: px2rem(-$height/2);\n            transition: transform 200ms;\n\n            &:nth-child(1) {\n                transform: translate3d(0, px2rem(-8px), 0);\n            }\n\n            &:nth-child(2) {\n                transform: translate3d(0, 0, 0);\n            }\n\n            &:nth-child(3) {\n                transform: translate3d(0, px2rem(8px), 0);\n            }\n        }\n\n        @for $i from 1 through $menu-items {\n            @if not $i == ($menu-items / 2 + 1) {\n                &:nth-child(#{$i}) {\n                    transition-duration: 200ms;\n                }\n            }\n        }\n    }\n\n}\n\n// .logo {\n.navbar__open-button {\n    @extend %ball;\n    // transition-timing-function:cubic-bezier(0.175, 0.885, 0.320, 1.275);\n    z-index: 200;\n    transition-timing-function: cubic-bezier(0.480, -0.600, 0.515, 1.580);\n    /* custom */\n    transition-duration: 400ms;\n    // transform:scale(1.1,1.1) translate3d(0,0,0);\n    cursor: pointer;\n    line-height: 100%;\n}\n\n// .playMenu {\n//     background-color: $menu-active-color;\n\n//     svg {\n\n//         path#top,\n//         path#bottom {\n//             stroke-dashoffset: -650px;\n//             stroke-dashoffset: -650px;\n//         }\n\n//         path#middle {\n//             stroke-dashoffset: -115px;\n//             stroke-dasharray: 1px 220px;\n//         }\n//     }\n// }\n\n\n@keyframes playMenu {\n    0% {\n        background-position: 0px 0px;\n    }\n\n    100% {\n        background-position: -4320px 0px;\n    }\n}\n\n// $real-menu-items: $menu-items + 1;\n.navbar--open {\n    li {\n        transition-timing-function: cubic-bezier(0.480, -0.600, 0.345, 1.295);\n        /* custom */\n        @for $i from 1 through $menu-items + 1 {\n            @if $i <= ($menu-items / 2) {\n                &:nth-child(#{$i}) { \n                    /* left */\n                    \n                    transition-duration: 250ms + (80ms * abs(($i + 0) - ($menu-items + 1)));\n                    // transform: translate3d(px2rem($menu-item-size * (($i - 1 + $menu-items / 2) - $menu-items)), px2rem(-((10px * (($i - 1 + $menu-items / 2) - $menu-items) + 10px))), 0);\n                    @if $start-at-menu {\n                        transform: translate3d(px2rem(($menu-item-size + $menu-item-gap) * (($i - 1 + $menu-items / 2) - $menu-items)), \n                        px2rem(-(($pix-dir * (($i - 1 + $menu-items / 2) - $menu-items) + $pix-dir))), 0);\n                    } @else {\n                        transform: translate3d(px2rem(($menu-item-size + $menu-item-gap) * (($i - 1 + $menu-items / 2) - $menu-items)), \n                        px2rem(-(($pix-dir * (($i - 1 + $menu-items / 2) - $menu-items)))), 0);\n                    }\n                }\n            }\n\n            @else {\n                @if $i > ($menu-items / 2 + 1) {\n                    &:nth-child(#{$i}) {\n                        /* right */\n                        transition-duration: 250ms + (80ms * ($i - 1));\n                        // transform: translate3d(px2rem($menu-item-size * ($i - ($menu-items / 2 + 1))), px2rem((10px * ($i - ($menu-items / 2 + 1))) - 10px), 0);\n                        @if $start-at-menu {\n                            transform: translate3d(px2rem(($menu-item-size + $menu-item-gap) * ($i - ($menu-items / 2 + 1))), \n                            px2rem(($pix-dir * ($i - ($menu-items / 2 + 1))) - $pix-dir), 0);\n                        } @else {\n                            transform: translate3d(px2rem(($menu-item-size + $menu-item-gap) * ($i - ($menu-items / 2 + 1))), \n                            px2rem(($pix-dir * ($i - ($menu-items / 2 + 1)))), 0);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // .logo {\n    .navbar__open-button {\n        // transition-timing-function: cubic-bezier(0.480, -0.600, 0.515, 1.580);\n        /* custom */\n        transition-timing-function: cubic-bezier(0.480, -0.600, 0.515, 1.580); /* custom */\n        // transition-timing-function: cubic-bezier(0.1, -0.1, 0.345, 1.295);\n\n\n        transition-duration: 400ms;\n        // transform:scale(0.8,0.8) translate3d(0,0,0);\n        // transform:scale(0.85,0.85) translate3d(0, px2rem(-10px),0);\n        transform: scale(0.85, 0.85) translate3d(0, 0, 0);\n        background: $menu-active-color;\n\n        // &:hover {\n        //   color: red;\n        // }\n        span {\n            &:nth-child(1) {\n                transform: translate3d(0, 0, 0) rotate(45deg);\n            }\n    \n            &:nth-child(2) {\n                transform: translate3d(0, 0, 0) scale(0.1, 1);\n            }\n    \n            &:nth-child(3) {\n                transform: translate3d(0, 0, 0) rotate(-45deg);\n            }\n        }\n    }\n}","@function strip-unit($number) {\r\n    @if type-of($number) == 'number' and not unitless($number) {\r\n        @return $number / ($number * 0 + 1);\r\n    }\r\n    @return $number;\r\n}\r\n\r\n@function px2rem($px, $root-px: 16) {\r\n    $value: strip-unit($px);\r\n    $root-value: strip-unit($root-px);\r\n    @return $value / $root-value + rem;\r\n}\r\n\r\n@function converter($val, $mp-val: 1, $mp: 1, $unit: null) {\r\n    $value: strip-unit($val);\r\n    $divider: strip-unit($mp-val);\r\n    @if $unit == null {\r\n        $unit: '';\r\n    }\r\n\r\n    @if $divider == 0 {\r\n        $divider: 1\r\n    }\r\n\r\n    @if $divider < 0 {\r\n        @return unquote($value / $divider + $unit);\r\n    } @else {\r\n        @return unquote($value * $divider + $unit);\r\n    }\r\n}\r\n\r\n@function to-unit($val, $unit: null) {\r\n    // @if type-of($unit) not 'string' and {\r\n    @if $unit and unitless($val) and type-of($val) == 'number' {\r\n        // @return strip-unit($val) + #{$unit};\r\n        @return unquote(strip-unit($val) + $unit);\r\n    }\r\n    \r\n    @return $val;\r\n}\r\n\r\n@mixin square-element($size) {\r\n    @if ($size == null) or (type-of($size) != number) {\r\n        @warn 'should be a number';\r\n    } \r\n    max-width: $size; \r\n    min-height: $size;\r\n}\r\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px,\n) !default;\n\n@function getBp($bp) {\n  @if not map-has-key($map: $breakpoints, $key: $bp) {\n    @warn 'Breakpoint not found. Breakpoints available: #{map-keys($map: $breakpoints)}.';\n    @return $bp;\n  }\n  @return map-get($map: $breakpoints, $key: #{$bp});\n}\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n"]}